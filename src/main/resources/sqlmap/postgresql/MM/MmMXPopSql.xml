<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="mmMXPop">

    <!-- 신규 -->
    <!-- 확인서 기본정보 및 생산자 조회 -->
    <select id="MMA019.selectBasicInfoCaseInsert" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT VENDOR_CD        AS VENDOR_CD
             , VENDOR_NAME      AS VENDOR_NAME
             , CHARGE_NAME      AS VENDOR_CHARGE_NAME
             , CHARGE_POSITION  AS VENDOR_CHARGE_POSITION
             , CHARGE_PHONE_NO  AS VENDOR_CHARGE_PHONE_NO
             , CHARGE_EMAIL     AS VENDOR_CHARGE_EMAIL
             , (CASE WHEN CHARGE_SIGNATURE IS NOT NULL THEN 'N' ELSE 'Y' END) AS SIGN_CARD_FILE_YN
             , VENDOR_CD        AS PRODUCER_CD
             , VENDOR_NAME      AS PRODUCER_NAME
             , BUSINESS_NO      AS PRODUCER_BUSINESS_NO
             , PRESIDENT_NAME   AS PRODUCER_PRESIDENT_NAME
             , PHONE_NO         AS PRODUCER_PHONE_NO
             , FAX_NO           AS PRODUCER_FAX_NO
             , CHARGE_EMAIL     AS PRODUCER_EMAIL
             , ADDRESS          AS PRODUCER_ADDRESS
             , COMPANY_CD       AS COMPANY_CD
             , CO_COVER_YN
             , (CASE WHEN CHARGE_SIGNATURE IS NOT NULL THEN 'Y' ELSE 'N' END) AS SING_REG_YN
             , FN_GET_COMMON_CD(COMPANY_CD, 'FTA_GROUP_CD', #FTA_GROUP_CD#, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS FTA_GROUP_NM
             , (SELECT (CASE WHEN COUNT(TV.COMPANY_CD) > 0 THEN 'Y' ELSE 'N' END)
                  FROM TCH_VENDOR TV 
                 WHERE TV.COMPANY_CD = VENDOR.COMPANY_CD AND TV.JOIN_STATUS = 'Y'
                   AND REPLACE(TV.CL_BUSINESS_NO, '-', '') = REPLACE(VENDOR.BUSINESS_NO, '-', '')) AS HUB_VENDOR_YN
          FROM VENDOR
         WHERE COMPANY_CD = #COMPANY_CD#
           AND VENDOR_CD = #VENDOR_CD#
    </select>
    
    <delete id="MMA019.deleteExcelReqItemSample" parameterClass="java.util.Map">
        DELETE FROM EXCELDATA
         WHERE COMPANY_CD = #COMPANY_CD#
           AND CATEGORY_CD = 'RCV_REQ_ITEM'
           AND ID = #VENDOR_CD#||'_'||#USER_ID#
    </delete>
    
    <insert id="MMA019.insertExcelReqItemSample" parameterClass="java.util.Map">
        INSERT INTO EXCELDATA
              (ID
              ,COMPANY_CD
              ,CATEGORY_CD
              ,CREATE_DATE
              ,SPID
              ,TEXTVALUE1
              ,TEXTVALUE2
              ,TEXTVALUE3
              ,TEXTVALUE4
              ,TEXTVALUE5
              ,TEXTVALUE6
              ,TEXTVALUE7)
        VALUES(#VENDOR_CD#||'_'||#USER_ID#
              ,#COMPANY_CD#
              ,'RCV_REQ_ITEM'
              ,NOW()
              ,#ROW_SEQ#::INT
              ,#VENDOR_CD#
              ,#CO_DOC_NO# 
              ,#ITEM_CD#
              ,#FTA_CD#
              ,#IF_CD#
              ,#RCV_REQ_NO#
              ,#REG_NO#)
    </insert>
    
    <!-- 품목별 원산지 리스트 조회 -->
    <select id="MMA019.selectItemListCaseInsert" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap" remapResults="true">
        SELECT DISTINCT '' AS STATUS,
               I.ITEM_CD,
	           IM.ITEM_NAME,
	           FM.FTA_CD,
	           FM.FTA_NAME,
	           CD1.WORD AS FTA_GROUP_NAME,
	         <isNotEmpty property="END_DATE">
	           FN_GET_ITEM_HS_CODE(I.COMPANY_CD, I.ITEM_CD, 'HSM', #END_DATE#, NULL) AS HS_CODE,
	           (CASE WHEN FM.FTA_ASSOCIATION_CD = 'MER' THEN
                          FN_GET_ITEM_HS_CODE(I.COMPANY_CD, I.ITEM_CD, 'NAL', #END_DATE#, NULL)
                     ELSE NULL
                END) AS NALADISA_CODE,
               FN_GET_RULE_CODES(FM.FTA_CD, FN_GET_ITEM_HS_CODE(I.COMPANY_CD, I.ITEM_CD, 'HSM', #END_DATE#, NULL),
                                 FN_GET_ITEM_HS_CODE(I.COMPANY_CD, I.ITEM_CD, 'NAL', #END_DATE#, NULL)) AS RULE_CODES,
	         </isNotEmpty>
	         <isEmpty property="END_DATE">
	           FN_GET_ITEM_HS_CODE(I.COMPANY_CD, I.ITEM_CD, 'HSM', TO_CHAR(NOW(), 'YYYYMM'), NULL) AS HS_CODE,
	           (CASE WHEN FM.FTA_ASSOCIATION_CD = 'MER' THEN
	                      FN_GET_ITEM_HS_CODE(I.COMPANY_CD, I.ITEM_CD, 'NAL', TO_CHAR(NOW(), 'YYYYMM'), NULL)
	                 ELSE NULL
	            END) AS NALADISA_CODE,
	           FN_GET_RULE_CODES(FM.FTA_CD, FN_GET_ITEM_HS_CODE(I.COMPANY_CD, I.ITEM_CD, 'HSM', TO_CHAR(NOW(), 'YYYYMM'), NULL),
                                 FN_GET_ITEM_HS_CODE(I.COMPANY_CD, I.ITEM_CD, 'NAL', TO_CHAR(NOW(), 'YYYYMM'), NULL)) AS RULE_CODES,
	         </isEmpty>
	           '' AS RULE_CONTENTS,
	           '' AS FTA_CO_YN_Y,
	           '' AS FTA_CO_YN_N,
	           #ISSUE_DATE# AS ISSUE_DATE,
	           #APPLY_DATE# AS APPLY_DATE,
	           #END_DATE# AS END_DATE,
	           '' AS RVC_RATE,
	           '' AS TRACE_VALUE,
	           'USD' AS CURRENCY,
	           '' AS SALES_UNIT_PRICE,
	           'USD' AS SALES_CURRENCY,
	         <isEqual property="NON_ORGIN_RESN_YN" compareValue="Y">
               '' AS NONORIGIN_REASON_CD,
               '' AS NONORIGIN_REASON_DESC,
             </isEqual>
	           '' AS WRITET_DESC,
	           FM.FTA_GROUP_CD,
	           NULL AS BEFORE_CO_DOC_NO,
	           FM.FTA_CNCS_MTH
	      FROM VENDOR_ITEM I
	           LEFT OUTER JOIN ITEM IM
                 ON IM.COMPANY_CD = I.COMPANY_CD
                AND IM.ITEM_CD = I.ITEM_CD
	           LEFT OUTER JOIN FTA_MST FM
	             ON FM.FTA_STATUS = '5'
	            AND FM.FTA_GROUP_CD = I.FTA_GROUP_CD
	          <isNotEmpty property="END_DATE">
                <![CDATA[   AND FM.EFFECTIVE_DATE <= #END_DATE# ]]>
              </isNotEmpty>
	           LEFT OUTER JOIN CODE_LANG_DIC CD1
                 ON CD1.COMPANY_CD = I.COMPANY_CD
                AND CD1.CATEGORY_CD = 'FTA_GROUP' 
                AND CD1.CODE = FM.FTA_GROUP_CD
                AND CD1.LANGUAGE_CAT = #SESSION_DEFAULT_LANGUAGE#
	     WHERE I.COMPANY_CD = #COMPANY_CD#
	       AND I.VENDOR_CD = #VENDOR_CD#
	       AND I.FTA_GROUP_CD = #FTA_GROUP_CD#
		<dynamic>
            <isNotEmpty property="gridData">
                <isEqual property="excel" compareValue="Y">
                    AND EXISTS(SELECT 1
                                 FROM EXCELDATA E
                                WHERE E.COMPANY_CD = I.COMPANY_CD
                                  AND E.TEXTVALUE1 = I.VENDOR_CD
                                  AND E.TEXTVALUE3 = I.ITEM_CD
                                  AND E.TEXTVALUE4 = FM.FTA_CD
                                  AND E.CATEGORY_CD = 'RCV_REQ_ITEM'
                                  AND E.ID = #VENDOR_CD#||'_'||#USER_ID#)
                    <!-- iterate open="(" close=")" property="gridData" conjunction=" OR " prepend="AND">
                        (I.ITEM_CD = #gridData[].ITEM_CD# AND FM.FTA_CD = #gridData[].FTA_CD#)
                    </iterate -->
                </isEqual>
                <isNotEqual property="excel" compareValue="Y">
                    AND EXISTS(SELECT 1
                                 FROM EXCELDATA E
                                WHERE E.COMPANY_CD = I.COMPANY_CD
                                  AND E.TEXTVALUE1 = I.VENDOR_CD
                                  AND E.TEXTVALUE3 = I.ITEM_CD
                                  AND E.CATEGORY_CD = 'RCV_REQ_ITEM'
                                  AND E.ID = #VENDOR_CD#||'_'||#USER_ID#)
                    <!-- iterate open="(" close=")" property="gridData" conjunction=" OR " prepend="AND">
                        I.ITEM_CD = #gridData[].ITEM_CD#
                    </iterate -->
                </isNotEqual>
            </isNotEmpty>
            <isEmpty property="gridData">
           AND I.ITEM_CD = #excel#
            </isEmpty>
        </dynamic>
        <isNotEmpty property="APPLY_FTA_CD">
           AND FM.FTA_CD IN($APPLY_FTA_CD$)
        </isNotEmpty>
		 ORDER BY I.ITEM_CD, FM.FTA_CD
    </select>
    
    <select id="MMA019.selectCoItemMappCaseInsert" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap" remapResults="true">
        SELECT DISTINCT '' AS STATUS
              ,RCIT.ITEM_CD
              ,I.ITEM_NAME
              ,FM.FTA_CD
              ,FM.FTA_NAME
              ,FN_GET_COMMON_CD(RCDA.COMPANY_CD, 'FTA_GROUP', FM.FTA_GROUP_CD, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS FTA_GROUP_NAME
              ,RCDA.E_HS_CODE_PROC AS HS_CODE
              ,RCDA.E_HS_CODE_PROC AS NALADISA_CODE
              ,FP.RULE_CONTENTS
              ,(CASE WHEN RCDA.E_FTA_CO_YN = 'Y' THEN 'Y' ELSE '' END) AS FTA_CO_YN_Y
              ,(CASE WHEN RCDA.E_FTA_CO_YN = 'N' THEN 'Y' ELSE '' END) AS FTA_CO_YN_N
              ,TO_CHAR(NOW(), 'YYYYMMDD') AS ISSUE_DATE
              ,RCDA.E_APPLY_DATE AS APPLY_DATE
              ,RCDA.E_END_DATE AS END_DATE
              ,(CASE WHEN RCIT.FTA_CD = 'PKRAP' AND (RCDA.E_RULE_CONTETNS IS NULL OR RCDA.E_RULE_CONTETNS = '') THEN '55'
                     WHEN COALESCE(FP.BD_RULE, 0)+COALESCE(FP.BU_RULE, 0)+COALESCE(FP.NC_RULE, 0)+COALESCE(FP.MC_RULE, 0) > 0 THEN
                          (COALESCE(FP.BD_RULE, 0)+COALESCE(FP.BU_RULE, 0)+COALESCE(FP.NC_RULE, 0)+COALESCE(FP.MC_RULE, 0))::text
                     ELSE ''
                END) AS RVC_RATE
              ,'' AS TRACE_VALUE
              ,'USD' AS CURRENCY
              ,'' AS SALES_UNIT_PRICE
              ,'USD' AS SALES_CURRENCY
              ,FP.RULE_CONTENTS AS RULE_CODES
              ,FM.FTA_GROUP_CD
              ,RCIT.FTA_CD AS RC_FTA_CD
          FROM RCV_CO_COIL_ITEM RCIT
               INNER JOIN RCV_CO_COIL_DATA RCDA
                  ON RCDA.COMPANY_CD = RCIT.COMPANY_CD
                 AND RCDA.VENDOR_CD = RCIT.VENDOR_CD
                 AND RCDA.IF_CD = RCIT.IF_CD
                 AND RCDA.REG_NO = RCIT.REG_NO
                 AND RCDA.E_FTA_CD = RCIT.E_FTA_CD
                LEFT OUTER JOIN ITEM I
                  ON I.COMPANY_CD = RCIT.COMPANY_CD
                 AND I.ITEM_CD = RCIT.ITEM_CD
                LEFT OUTER JOIN FTA_MAPPING FMP
                  ON FMP.COMPANY_CD = RCDA.COMPANY_CD
                 AND FMP.CLIENT_CD = RCDA.VENDOR_CD
                 AND FMP.CLIENT_FTA_CD = RCDA.E_FTA_CD
                LEFT OUTER JOIN FTA_MST FM
                  ON FM.FTA_CD = COALESCE(FMP.FTA_CD, RCIT.FTA_CD)
                LEFT OUTER JOIN FTA_PSR FP
                  ON FP.FTA_CODE = COALESCE(FMP.FTA_CD, RCIT.FTA_CD)
                 AND FP.HS_CODE = SUBSTRING(RCDA.E_HS_CODE_PROC, 1, LENGTH(FP.HS_CODE))
                 AND FP.RULE_CONTENTS = REPLACE(RCDA.E_RULE_CONTETNS, ' ', '')
                 AND RCDA.E_APPLY_DATE BETWEEN FP.APPLY_DATE AND FP.END_DATE
         WHERE RCIT.COMPANY_CD = #COMPANY_CD#
           AND RCIT.VENDOR_CD = #VENDOR_CD#
           AND RCIT.FTA_GROUP_CD = #FTA_GROUP_CD#
         <dynamic>
             <isNotEmpty property="gridData">
                 AND EXISTS(SELECT 1
                              FROM EXCELDATA E
                             WHERE E.COMPANY_CD = RCIT.COMPANY_CD
                               AND E.TEXTVALUE1 = RCIT.VENDOR_CD
                               AND E.TEXTVALUE5 = RCIT.IF_CD
                               AND E.TEXTVALUE7 = RCIT.REG_NO
                               AND E.CATEGORY_CD = 'RCV_REQ_ITEM'
                               AND E.ID = #VENDOR_CD#||'_'||#USER_ID#)
                 <!-- iterate open="(" close=")" property="gridData" conjunction=" OR " prepend="AND">
                     (RCIT.IF_CD = #gridData[].IF_CD# AND RCIT.REG_NO = #gridData[].REG_NO#)
                 </iterate -->
             </isNotEmpty>
         </dynamic>
         <isNotEmpty property="APPLY_FTA_CD">
            AND RCIT.FTA_CD IN($APPLY_FTA_CD$)
         </isNotEmpty>
         ORDER BY RCIT.ITEM_CD, FM.FTA_CD
    </select>
    
    <!-- 수정 -->
    <!-- 확인서 기본정보 및 생산자,서명권자 수정정보 조회 -->
    <select id="MMA019.selectBasicInfoCaseUpdate" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT A.*
              ,COALESCE(A.LAST_CLOSING_DATE, A.APPLY_DATE) AS MOD_APPLY_DATE
              ,(SELECT (CASE WHEN COUNT(TV.COMPANY_CD) > 0 THEN 'Y' ELSE 'N' END)
                  FROM TCH_VENDOR TV 
                 WHERE TV.COMPANY_CD = A.COMPANY_CD AND TV.JOIN_STATUS = 'Y'
                   AND REPLACE(TV.CL_BUSINESS_NO, '-', '') = REPLACE(A.BUSINESS_NO, '-', '')) AS HUB_VENDOR_YN
          FROM (
                SELECT A.*
                  FROM (
                        SELECT A.CO_DOC_NO
                             , A.VENDOR_CD
                             , A.COMPANY_CD
                             , A.CO_DOC_TYPE
                             , A.ISSUE_DATE
                             , A.APPLY_DATE
                             , A.END_DATE
                             , A.VENDOR_CHARGE_NAME
                             , A.VENDOR_CHARGE_POSITION
                             , A.VENDOR_CHARGE_PHONE_NO
                             , A.VENDOR_CHARGE_EMAIL
                             , A.PRODUCER_NAME
                             , A.PRODUCER_PRESIDENT_NAME
                             , A.PRODUCER_BUSINESS_NO
                             , A.PRODUCER_PHONE_NO
                             , A.PRODUCER_FAX_NO
                             , A.PRODUCER_EMAIL
                             , A.PRODUCER_ADDRESS
                             , (CASE WHEN A.SIGN_CARD IS NULL THEN 'Y' ELSE 'N' END) AS SIGN_CARD_FILE_YN
                             , FN_GET_VENDOR(A.COMPANY_CD, A.VENDOR_CD, 'VENDOR_NAME') AS VENDOR_NAME
                             , B.FILE_SEQ AS PRF_FILE_SEQ
                             , B.FILE_TYPE
                             , B.FILE_PATH
                             , B.FILE_NAME
                             , B.ORIGIN_FILE_NAME AS PRF_FILE_NAME
                             , IH.TO_DATE AS LAST_CLOSING_DATE
                             , A.END_DATE AS MOD_END_DATE
                             , RANK() OVER (ORDER BY IH.TO_DATE DESC) RANK
                             , FN_GET_COMMON_CD(A.COMPANY_CD, 'FTA_GROUP_CD', #FTA_GROUP_CD#, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS FTA_GROUP_NM
                             , (CASE WHEN V.CHARGE_SIGNATURE IS NOT NULL THEN 'Y' ELSE 'N' END) AS SING_REG_YN
                             , V.BUSINESS_NO
                             , V.CO_COVER_YN
                          FROM RCV_CO_CERTIFICATE_MST A
	                           INNER JOIN VENDOR V
	                              ON V.COMPANY_CD = A.COMPANY_CD
	                             AND V.VENDOR_CD = A.VENDOR_CD
		                        LEFT JOIN RCV_CO_CERTIFICATE_FILE B
		                          ON A.CO_DOC_NO   = B.CO_DOC_NO
		                         AND A.VENDOR_CD   = B.VENDOR_CD
		                         AND A.COMPANY_CD  = B.COMPANY_CD
		                         AND A.DIVISION_CD = B.DIVISION_CD
		                         AND B.EV_DOC_TYPE = '01'
		                        LEFT OUTER JOIN INTERFACE_HISTORY IH
		                          ON IH.COMPANY_CD = A.COMPANY_CD
		                         AND IH.SCHEDULE_CD = 'MONTHLY_BATCH'
		                         AND IH.IF_CD = 'PKG_CLOSING_MONTHLY'
		                         AND COALESCE(IH.ERROR_YN, 'N') = 'N'
		                         AND IH.TO_DATE BETWEEN A.APPLY_DATE AND A.END_DATE
                        WHERE A.CO_DOC_NO   = #CO_DOC_NO#
                          AND A.VENDOR_CD   = #VENDOR_CD#
                          AND A.COMPANY_CD  = #COMPANY_CD#
                          AND A.DIVISION_CD = (SELECT MAX(M.DIVISION_CD)
                                                 FROM RCV_CO_CERTIFICATE_MST M
                                                WHERE M.CO_DOC_NO   = A.CO_DOC_NO
						                          AND M.VENDOR_CD   = A.VENDOR_CD
						                          AND M.COMPANY_CD  = A.COMPANY_CD)
                      ) A
                WHERE RANK = 1
               ) A
         LIMIT 1 
    </select>
    
    <!-- 기등록 품목별 원산지 내역 수정정보 조회 -->
    <select id="MMA019.selectItemListCaseUpdate" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        <include refid="select-paging-start" />
        SELECT DISTINCT RCCD.ITEM_CD
             , RCCD.ITEM_NAME
             , RCCD.FTA_CD
             , RCCD.FTA_NAME
             <isEqual property="CUSTOMER_HS_CODE_YN" compareValue="Y">
             , SUBSTR(COALESCE(RCCD.HS_CODE, A.HS_CODE), 1, 6) AS HS_CODE
             , (CASE WHEN SUBSTR(RCCD.HS_CODE, 1, 6) != SUBSTR(COALESCE(A.HS_CODE, '0'), 1, 6) OR FP.RULE_CONTENTS IS NULL THEN FP1.RULE_CONTENTS ELSE A.RULE_CONTENTS END) AS RULE_CONTENTS
             , (CASE WHEN SUBSTR(RCCD.HS_CODE, 1, 6) != SUBSTR(COALESCE(A.HS_CODE, '0'), 1, 6) OR FP.RULE_CONTENTS IS NULL THEN  
                          (CASE WHEN (COALESCE(FP1.BD_RULE, 0)+COALESCE(FP1.BU_RULE, 0)+COALESCE(FP1.NC_RULE, 0)+COALESCE(FP1.MC_RULE, 0)) > 0 THEN 
                                     (COALESCE(FP1.BD_RULE, 0)+COALESCE(FP1.BU_RULE, 0)+COALESCE(FP1.NC_RULE, 0)+COALESCE(FP1.MC_RULE, 0))
                                ELSE NULL
                           END)
                     ELSE (CASE WHEN (COALESCE(FP.BD_RULE, 0)+COALESCE(FP.BU_RULE, 0)+COALESCE(FP.NC_RULE, 0)+COALESCE(FP.MC_RULE, 0)) > 0 AND A.RVC_RATE IS NULL THEN 
                                     (CASE WHEN (COALESCE(FP.BD_RULE, 0)+COALESCE(FP.BU_RULE, 0)+COALESCE(FP.NC_RULE, 0)) > 0 THEN
		                                        (CASE WHEN COALESCE(A.FTA_CO_YN, 'N') = 'N' THEN 0 ELSE (COALESCE(FP.BD_RULE, 0)+COALESCE(FP.BU_RULE, 0)+COALESCE(FP.NC_RULE, 0)) END)
		                                   WHEN COALESCE(FP.MC_RULE, 0) > 0 THEN
		                                        (CASE WHEN COALESCE(A.FTA_CO_YN, 'N') = 'N' THEN 100 ELSE COALESCE(FP.MC_RULE, 0) END)
		                                   ELSE NULL
		                              END)
                                ELSE A.RVC_RATE
                           END)
                END) AS RVC_RATE
             , (CASE WHEN SUBSTR(RCCD.HS_CODE, 1, 6) != SUBSTR(COALESCE(A.HS_CODE, '0'), 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE A.FTA_CO_YN END) AS FTA_CO_YN
             , (CASE WHEN SUBSTR(RCCD.HS_CODE, 1, 6) != SUBSTR(COALESCE(A.HS_CODE, '0'), 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE A.TRACE_VALUE END) AS TRACE_VALUE
             , (CASE WHEN SUBSTR(RCCD.HS_CODE, 1, 6) != SUBSTR(COALESCE(A.HS_CODE, '0'), 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE A.CURRENCY END) AS CURRENCY
             , (CASE WHEN SUBSTR(RCCD.HS_CODE, 1, 6) != SUBSTR(COALESCE(A.HS_CODE, '0'), 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE A.SALES_UNIT_PRICE END) AS SALES_UNIT_PRICE
             , (CASE WHEN SUBSTR(RCCD.HS_CODE, 1, 6) != SUBSTR(COALESCE(A.HS_CODE, '0'), 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE A.SALES_CURRENCY END) AS SALES_CURRENCY
             , (CASE WHEN SUBSTR(RCCD.HS_CODE, 1, 6) != SUBSTR(COALESCE(A.HS_CODE, '0'), 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE DECODE(A.FTA_CO_YN, 'Y', 'Y', '') END) AS FTA_CO_YN_Y
             , (CASE WHEN SUBSTR(RCCD.HS_CODE, 1, 6) != SUBSTR(COALESCE(A.HS_CODE, '0'), 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE DECODE(A.FTA_CO_YN, 'N', 'Y', '') END) AS FTA_CO_YN_N
             , (CASE WHEN RCCD.FTA_CNCS_MTH = 'M' OR COALESCE(A.ORIGIN_NATION_CD, '') != '' THEN A.ORIGIN_NATION_CD 
                     ELSE (CASE WHEN SUBSTR(RCCD.HS_CODE, 1, 6) != SUBSTR(COALESCE(A.HS_CODE, '0'), 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE DECODE(A.FTA_CO_YN, 'Y', RCCD.FTA_GROUP_CD, '') END)
                END) AS ORIGIN_NATION_CD
             </isEqual>
             <isNotEqual property="CUSTOMER_HS_CODE_YN" compareValue="Y">
             , A.HS_CODE
               <isNotEqual property="flag" compareValue="view">
                 , (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE A.RULE_CONTENTS END) AS RULE_CONTENTS
	             , (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE A.RVC_RATE END) AS RVC_RATE
	             , (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE A.FTA_CO_YN END) AS FTA_CO_YN
	             , (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE A.TRACE_VALUE END) AS TRACE_VALUE
	             , (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE A.CURRENCY END) AS CURRENCY
	             , (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE A.SALES_UNIT_PRICE END) AS SALES_UNIT_PRICE
	             , (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE A.SALES_CURRENCY END) AS SALES_CURRENCY
	             , (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE CASE WHEN A.FTA_CO_YN = 'Y' THEN 'Y' ELSE '' END END) AS FTA_CO_YN_Y
	             , (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE CASE WHEN A.FTA_CO_YN = 'N' THEN 'Y' ELSE '' END END) AS FTA_CO_YN_N
	             , (CASE WHEN RCCD.FTA_CNCS_MTH = 'M' OR COALESCE(A.ORIGIN_NATION_CD, '') != '' THEN A.ORIGIN_NATION_CD 
	                     ELSE (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE CASE WHEN A.FTA_CO_YN = 'Y' THEN RCCD.FTA_GROUP_CD ELSE '' END END)
	                END) AS ORIGIN_NATION_CD
               </isNotEqual>
               <isEqual property="flag" compareValue="view">
                 , A.RULE_CONTENTS
                 , A.RVC_RATE
                 , A.FTA_CO_YN
                 , A.TRACE_VALUE
                 , A.CURRENCY
                 , A.SALES_UNIT_PRICE
                 , A.SALES_CURRENCY
                 , (CASE WHEN A.FTA_CO_YN = 'Y' THEN 'Y' ELSE '' END) AS FTA_CO_YN_Y
                 , (CASE WHEN A.FTA_CO_YN = 'N' THEN 'Y' ELSE '' END) AS FTA_CO_YN_N
	             , A.ORIGIN_NATION_CD
               </isEqual>
             </isNotEqual>
             , RCCD.FTA_GROUP_CD
             , RCCD.NALADISA_CODE
             , RCCD.CO_DOC_NO
             , RCCD.VENDOR_CD
             , RCCD.COMPANY_CD
             , A.NONORIGIN_REASON_CD
             , CD1.WORD AS NONORIGIN_REASON_NAME
             , A.NONORIGIN_REASON_DESC
             , RCCD.FTA_CNCS_MTH
          FROM (SELECT   RCCD.CO_DOC_NO
                        ,RCCD.COMPANY_CD
                        ,RCCD.DIVISION_CD
                        ,RCCD.VENDOR_CD
                        ,RCCD.ITEM_CD
                        <isEqual property="flag" compareValue="view">
                        ,MAX(RCCD.HS_CODE) AS HS_CODE
                        ,MAX(RCCD.NALADISA_CODE) AS NALADISA_CODE
                        </isEqual>
                        <isNotEqual property="flag" compareValue="view">
                        <isNotEmpty property="END_DATE">
                        ,FN_GET_ITEM_HS_CODE(RCCD.COMPANY_CD, RCCD.ITEM_CD, 'HSK', #END_DATE#, NULL) AS HS_CODE
                        ,FN_GET_ITEM_HS_CODE(RCCD.COMPANY_CD, RCCD.ITEM_CD, 'NAL', #END_DATE#, NULL) AS NALADISA_CODE
                        </isNotEmpty>
                        <isEmpty property="END_DATE">
                        ,FN_GET_ITEM_HS_CODE(RCCD.COMPANY_CD, RCCD.ITEM_CD, 'HSK', NULL, NULL) AS HS_CODE
                        ,FN_GET_ITEM_HS_CODE(RCCD.COMPANY_CD, RCCD.ITEM_CD, 'NAL', NULL, NULL) AS NALADISA_CODE
                        </isEmpty>
                        </isNotEqual>
                        ,MAX(IM.ITEM_NAME) AS ITEM_NAME
                        ,RCCD.FTA_CD
                        ,MAX(FM.FTA_NAME) AS FTA_NAME
                        ,MAX(FM.FTA_GROUP_CD) AS FTA_GROUP_CD
                        ,MAX(FM.FTA_CNCS_MTH) AS FTA_CNCS_MTH
                    FROM RCV_CO_CERTIFICATE_DTL RCCD
                         LEFT OUTER JOIN ITEM IM
                           ON IM.COMPANY_CD = RCCD.COMPANY_CD
                          AND IM.ITEM_CD = RCCD.ITEM_CD
                         LEFT OUTER JOIN FTA_MST FM
                           ON FM.FTA_STATUS = '5'
                          AND FM.FTA_GROUP_CD = RCCD.FTA_GROUP_CD
                          AND FM.FTA_CD = RCCD.FTA_CD
                        <isNotEmpty property="APPLY_FTA_CD">
	                      AND FM.FTA_CD IN($APPLY_FTA_CD$)
	                    </isNotEmpty>
                   WHERE RCCD.CO_DOC_NO = #CO_DOC_NO#
		             AND RCCD.VENDOR_CD = #VENDOR_CD#
		             AND RCCD.COMPANY_CD = #COMPANY_CD#
		           GROUP BY RCCD.CO_DOC_NO
                           ,RCCD.COMPANY_CD
                           ,RCCD.VENDOR_CD
                           ,RCCD.DIVISION_CD
                           ,RCCD.FTA_CD
                           ,RCCD.ITEM_CD
                           ,RCCD.FTA_GROUP_CD
                  ) RCCD
               <isEqual property="CUSTOMER_HS_CODE_YN" compareValue="Y"> 
                 LEFT OUTER JOIN RCV_CO_CERTIFICATE_DTL A
               </isEqual>
               <isNotEqual property="CUSTOMER_HS_CODE_YN" compareValue="Y"> 
                 INNER JOIN RCV_CO_CERTIFICATE_DTL A
               </isNotEqual>
                   ON A.CO_DOC_NO = RCCD.CO_DOC_NO
                  AND A.COMPANY_CD = RCCD.COMPANY_CD
                  AND A.VENDOR_CD = RCCD.VENDOR_CD
                  AND A.DIVISION_CD = RCCD.DIVISION_CD
                  AND A.FTA_CD = RCCD.FTA_CD
                  AND A.ITEM_CD = RCCD.ITEM_CD
                  AND A.FTA_GROUP_CD = RCCD.FTA_GROUP_CD
               LEFT OUTER JOIN ITEM I
                 ON I.COMPANY_CD = A.COMPANY_CD
                AND I.ITEM_CD = A.ITEM_CD
               LEFT OUTER JOIN FTA_PSR FP
                 ON FP.FTA_CODE = A.FTA_CD
                AND FP.HS_CODE = SUBSTR(A.HS_CODE, 1, LENGTH(FP.HS_CODE))
                AND FP.RULE_CONTENTS = A.RULE_CONTENTS
               LEFT OUTER JOIN FTA_PSR FP1
                 ON FP1.FTA_CODE = RCCD.FTA_CD
                AND FP1.HS_CODE = SUBSTR(RCCD.HS_CODE, 1, LENGTH(FP1.HS_CODE))
                AND FP1.HS_CODE_SUB_CATEGORY = '1'
                AND FP1.RULE_SEQ = (CASE WHEN RCCD.FTA_CD = 'PKRAP' THEN '2' ELSE '1' END)
                AND TO_CHAR(NOW(), 'YYYYMMDD') BETWEEN FP1.APPLY_DATE AND FP1.END_DATE
               LEFT OUTER JOIN CODE_LANG_DIC CD1
                 ON CD1.COMPANY_CD = A.COMPANY_CD
                AND CD1.CATEGORY_CD = 'NONORIGIN_REASON' 
                AND CD1.CODE = A.NONORIGIN_REASON_CD
                AND CD1.LANGUAGE_CAT = #SESSION_DEFAULT_LANGUAGE#
        <include refid="select-paging-end" />
        ORDER BY ITEM_CD, FTA_CD
    </select>
    
    <!-- 갱신 -->
    <!-- 확인서 기본정보 및 생산자 갱신정보 조회 -->
    <select id="MMA019.selectBasicInfoCaseRenew" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT DISTINCT A.VENDOR_CD                /*거래처코드*/
             , A.COMPANY_CD               /*회사코드*/
             , A.CO_DOC_TYPE              /*원산지증명유형*/
             , A.VENDOR_CHARGE_NAME       /*성명*/
             , A.VENDOR_CHARGE_POSITION
             , A.VENDOR_CHARGE_PHONE_NO   /*연락처*/
             , A.VENDOR_CHARGE_EMAIL      /*이메일*/
             , A.PRODUCER_NAME            /*업체명*/
             , A.PRODUCER_PRESIDENT_NAME  /*사업자등록번호*/
             , A.PRODUCER_BUSINESS_NO     /*대표자명*/
             , A.PRODUCER_PHONE_NO        /*전화번호*/
             , A.PRODUCER_FAX_NO          /*팩스번호*/
             , A.PRODUCER_EMAIL           /*이메일*/
             , A.PRODUCER_ADDRESS         /*주소*/
             , NVL2(A.SIGN_CARD, 'N', 'Y') AS SIGN_CARD_FILE_YN /*서명파일 존재여부*/
             , FN_GET_VENDOR(#COMPANY_CD#, #VENDOR_CD#, 'VENDOR_NAME') AS VENDOR_NAME
          FROM RCV_CO_CERTIFICATE_MST A
         WHERE A.CO_DOC_NO   = #CO_DOC_NO#
           AND A.VENDOR_CD   = #VENDOR_CD#
           AND A.COMPANY_CD  = #COMPANY_CD#
           AND A.DIVISION_CD = (SELECT MAX(M.DIVISION_CD)
                                  FROM RCV_CO_CERTIFICATE_MST M
                                 WHERE M.CO_DOC_NO   = A.CO_DOC_NO
                                   AND M.VENDOR_CD   = A.VENDOR_CD
                                   AND M.COMPANY_CD  = A.COMPANY_CD)
    </select>

    <!-- 품목별 원산지 리스트 갱신정보 조회 -->
    <select id="MMA019.selectItemListCaseRenew" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
	      SELECT DISTINCT '' AS STATUS,
	             I.ITEM_CD,
	             FN_GET_ITEM(I.COMPANY_CD, NULL, I.ITEM_CD, 'ITEM_NAME') AS ITEM_NAME,
	             FM.FTA_CD,
	             FM.FTA_NAME,
	             FN_GET_COMMON_CD(I.COMPANY_CD, 'FTA_GROUP', FM.FTA_GROUP_CD, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS FTA_GROUP_NAME,
	           <isEqual property="CUSTOMER_HS_CODE_YN" compareValue="Y">
	           <isNotEmpty property="END_DATE">
	             SUBSTR(COALESCE(FN_GET_ITEM_HS_CODE(I.COMPANY_CD, I.ITEM_CD, 'HSK', #END_DATE#, NULL), I.HS_CODE), 1, 6) AS HS_CODE,
	           </isNotEmpty>
	           <isEmpty property="END_DATE">
	             SUBSTR(COALESCE(FN_GET_ITEM_HS_CODE(I.COMPANY_CD, I.ITEM_CD, 'HSK', TO_CHAR(NOW(), 'YYYYMM'), NULL), I.HS_CODE), 1, 6) AS HS_CODE,
	           </isEmpty>
	             I.NALADISA_CODE,
	             (CASE WHEN SUBSTR(IM.HS_CODE, 1, 6) != SUBSTR(I.HS_CODE, 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE I.RULE_CONTENTS END) AS RULE_CONTENTS,
	             (CASE WHEN SUBSTR(IM.HS_CODE, 1, 6) != SUBSTR(I.HS_CODE, 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE DECODE(I.FTA_CO_YN, 'Y', 'Y', '') END) AS FTA_CO_YN_Y,
                 (CASE WHEN SUBSTR(IM.HS_CODE, 1, 6) != SUBSTR(I.HS_CODE, 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE DECODE(I.FTA_CO_YN, 'N', 'Y', '') END) AS FTA_CO_YN_N,
	             #ISSUE_DATE# AS ISSUE_DATE,
	             #APPLY_DATE# AS APPLY_DATE,
	             #END_DATE# AS END_DATE,
	             (CASE WHEN SUBSTR(IM.HS_CODE, 1, 6) != SUBSTR(I.HS_CODE, 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE I.RVC_RATE END) AS RVC_RATE,
                 (CASE WHEN SUBSTR(IM.HS_CODE, 1, 6) != SUBSTR(I.HS_CODE, 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE I.TRACE_VALUE END) AS TRACE_VALUE,
                 (CASE WHEN SUBSTR(IM.HS_CODE, 1, 6) != SUBSTR(I.HS_CODE, 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE I.CURRENCY END) AS CURRENCY,
                 (CASE WHEN SUBSTR(IM.HS_CODE, 1, 6) != SUBSTR(I.HS_CODE, 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE I.SALES_UNIT_PRICE END) AS SALES_UNIT_PRICE,
                 (CASE WHEN SUBSTR(IM.HS_CODE, 1, 6) != SUBSTR(I.HS_CODE, 1, 6) OR FP.RULE_CONTENTS IS NULL THEN NULL ELSE I.SALES_CURRENCY END) AS SALES_CURRENCY,
	             <isEqual property="NON_ORGIN_RESN_YN" compareValue="Y">
                   NULL AS NONORIGIN_REASON_CD,
                   NULL AS NONORIGIN_REASON_DESC,
                 </isEqual>
                 I.ORIGIN_NATION_CD,
	             FN_GET_RULE_CODES(FM.FTA_CD, COALESCE(IM.HS_CODE, I.HS_CODE), I.NALADISA_CODE) AS RULE_CODES,
	           </isEqual>
	           <isNotEqual property="CUSTOMER_HS_CODE_YN" compareValue="Y">
	             I.HS_CODE,
                 I.NALADISA_CODE,
                 <isNotEqual property="flag" compareValue="view">
                 (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE I.RULE_CONTENTS END) AS RULE_CONTENTS,
                 (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE CASE WHEN I.FTA_CO_YN = 'Y' THEN 'Y' ELSE '' END END) AS FTA_CO_YN_Y,
                 (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE CASE WHEN I.FTA_CO_YN = 'N' THEN 'Y' ELSE '' END END) AS FTA_CO_YN_N,
                 #ISSUE_DATE# AS ISSUE_DATE,
                 #APPLY_DATE# AS APPLY_DATE,
                 #END_DATE# AS END_DATE,
                 (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL
                       WHEN I.RVC_RATE IS NULL AND (COALESCE(FP.BD_RULE, 0)+COALESCE(FP.BU_RULE, 0)+COALESCE(FP.NC_RULE, 0)+COALESCE(FP.MC_RULE, 0)) > 0 THEN
                            (CASE WHEN (COALESCE(FP.BD_RULE, 0)+COALESCE(FP.BU_RULE, 0)+COALESCE(FP.NC_RULE, 0)) > 0 THEN
                                       (CASE WHEN COALESCE(I.FTA_CO_YN, 'N') = 'N' THEN 0 ELSE (COALESCE(FP.BD_RULE, 0)+COALESCE(FP.BU_RULE, 0)+COALESCE(FP.NC_RULE, 0)) END)
                                  WHEN COALESCE(FP.MC_RULE, 0) > 0 THEN
                                       (CASE WHEN COALESCE(I.FTA_CO_YN, 'N') = 'N' THEN 100 ELSE COALESCE(FP.MC_RULE, 0) END)
                                  ELSE NULL
                             END)
                       ELSE I.RVC_RATE
                  END) AS RVC_RATE,
                 (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE I.TRACE_VALUE END) AS TRACE_VALUE,
                 (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE I.CURRENCY END) AS CURRENCY,
                 (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE I.SALES_UNIT_PRICE END) AS SALES_UNIT_PRICE,
                 (CASE WHEN FP.RULE_CONTENTS IS NULL THEN NULL ELSE I.SALES_CURRENCY END) AS SALES_CURRENCY,
                 </isNotEqual>
                 <isEqual property="flag" compareValue="view">
                 I.RULE_CONTENTS,
                 (CASE WHEN I.FTA_CO_YN = 'Y' THEN 'Y' ELSE '' END) AS FTA_CO_YN_Y,
                 (CASE WHEN I.FTA_CO_YN = 'N' THEN 'Y' ELSE '' END) AS FTA_CO_YN_N,
                 #ISSUE_DATE# AS ISSUE_DATE,
                 #APPLY_DATE# AS APPLY_DATE,
                 #END_DATE# AS END_DATE,
                 I.RVC_RATE,
                 I.TRACE_VALUE,
                 I.CURRENCY,
                 I.SALES_UNIT_PRICE,
                 I.SALES_CURRENCY,
                 </isEqual>
                 <isEqual property="NON_ORGIN_RESN_YN" compareValue="Y">
                   NULL AS NONORIGIN_REASON_CD,
                   NULL AS NONORIGIN_REASON_DESC,
                 </isEqual>
                 I.ORIGIN_NATION_CD,
                 FN_GET_RULE_CODES(FM.FTA_CD, I.HS_CODE, I.NALADISA_CODE) AS RULE_CODES,
	           </isNotEqual>
                 '' AS WRITET_DESC,
	             FM.FTA_GROUP_CD,
	             I.CO_DOC_NO,
                 FM.FTA_CNCS_MTH
	        FROM RCV_CO_CERTIFICATE_DTL I
	             INNER JOIN RCV_CO_CERTIFICATE_MST M
	                ON M.CO_DOC_NO = I.CO_DOC_NO
	               AND M.COMPANY_CD = I.COMPANY_CD
	               AND M.DIVISION_CD = I.DIVISION_CD
	               AND M.CO_DOC_TYPE = 'C'
	             LEFT OUTER JOIN ITEM IM
                   ON IM.COMPANY_CD = I.COMPANY_CD
                  AND IM.ITEM_CD = I.ITEM_CD
	             LEFT OUTER JOIN FTA_MST FM
	               ON FM.FTA_CD = I.FTA_CD
	              AND FM.FTA_STATUS = '5'
	              AND FM.FTA_GROUP_CD = I.FTA_GROUP_CD
	             LEFT OUTER JOIN FTA_PSR FP
                   ON FP.FTA_CODE = I.FTA_CD
                  AND FP.HS_CODE = SUBSTR(I.HS_CODE, 1, LENGTH(FP.HS_CODE))
                  AND FP.RULE_CONTENTS = I.RULE_CONTENTS
	       WHERE I.COMPANY_CD = #COMPANY_CD#
	         AND I.VENDOR_CD = #VENDOR_CD#
	        <dynamic>
	            <isNotEmpty property="gridData">
	                AND EXISTS(SELECT 1
                                 FROM EXCELDATA E
                                WHERE E.COMPANY_CD = I.COMPANY_CD
                                  AND E.TEXTVALUE1 = I.VENDOR_CD
                                  AND E.TEXTVALUE2 = I.CO_DOC_NO
                                  AND E.TEXTVALUE3 = I.ITEM_CD
                                  AND E.CATEGORY_CD = 'RCV_REQ_ITEM'
                                  AND E.ID = #VENDOR_CD#||'_'||#USER_ID#)
                    <!-- iterate open="(" close=")" property="gridData" conjunction=" OR " prepend="AND">
	                    (I.CO_DOC_NO = #gridData[].CO_DOC_NO# AND I.ITEM_CD = #gridData[].ITEM_CD#)
	                </iterate -->
	            </isNotEmpty>
	            <isEmpty property="gridData">
	           AND I.ITEM_CD = ''
	            </isEmpty>
	        </dynamic>
        ORDER BY I.ITEM_CD, FM.FTA_CD
    </select>
    
    <!-- 품목별 원산지 리스트 미결 조회 -->
    <select id="MMA019.selectItemListCasePeding" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
          SELECT DISTINCT '' AS STATUS,
                 I.ITEM_CD,
                 FN_GET_ITEM(I.COMPANY_CD, NULL, I.ITEM_CD, 'ITEM_NAME') AS ITEM_NAME,
                 FM.FTA_CD,
                 FM.FTA_NAME,
                 FN_GET_COMMON_CD(I.COMPANY_CD, 'FTA_GROUP', FM.FTA_GROUP_CD, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS FTA_GROUP_NAME,
                 I.HS_CODE,
                 I.NALADISA_CODE,
                 '' AS RULE_CONTENTS,
                 '' AS FTA_CO_YN_Y,
                 '' AS FTA_CO_YN_N,
                 #ISSUE_DATE# AS ISSUE_DATE,
                 #APPLY_DATE# AS APPLY_DATE,
                 #END_DATE# AS END_DATE,
                 '' AS RVC_RATE,
                 '' AS TRACE_VALUE,
                 '' AS CURRENCY,
                 '' AS SALES_UNIT_PRICE,
                 '' AS SALES_CURRENCY,
                 FN_GET_RULE_CODES(FM.FTA_CD, I.HS_CODE, I.NALADISA_CODE) AS RULE_CODES,
                 I.CO_DOC_NO,
                 FM.FTA_GROUP_CD,
                 NULL AS NONORIGIN_REASON_CD,
                 NULL AS NONORIGIN_REASON_NAME,
                 NULL AS NONORIGIN_REASON_DESC,
                 IM.TEMP_COLUMN3,
                 IM.TEMP_COLUMN4,
                 FM.FTA_CNCS_MTH
            FROM RCV_CO_CERTIFICATE_REQ I
                 LEFT OUTER JOIN FTA_MST FM
                   ON FM.FTA_CD = I.FTA_CD
                 LEFT OUTER JOIN ITEM IM
                   ON I.COMPANY_CD = IM.COMPANY_CD
                  AND I.ITEM_CD = IM.ITEM_CD
           WHERE I.COMPANY_CD = #COMPANY_CD#
             AND I.VENDOR_CD = #VENDOR_CD#
            <dynamic>
                <isNotEmpty property="gridData">
                     AND EXISTS(SELECT 1
                                  FROM EXCELDATA E
                                 WHERE E.COMPANY_CD = I.COMPANY_CD
                                   AND E.TEXTVALUE1 = I.VENDOR_CD
                                   AND E.TEXTVALUE3 = I.ITEM_CD
                                   AND E.TEXTVALUE6 = I.RCV_REQ_NO
                                   AND E.CATEGORY_CD = 'RCV_REQ_ITEM'
                                   AND E.ID = #VENDOR_CD#||'_'||#USER_ID#)
                     <!-- iterate open="(" close=")" property="gridData" conjunction=" OR " prepend="AND">
                        (I.RCV_REQ_NO = #gridData[].RCV_REQ_NO#::numeric AND I.ITEM_CD = #gridData[].ITEM_CD#)
                    </iterate -->
                </isNotEmpty>
                <isEmpty property="gridData">
               AND I.ITEM_CD = ''
                </isEmpty>
            </dynamic>
        ORDER BY I.ITEM_CD, FM.FTA_CD
    </select>
    
    <update id="MMA019.updateRequestCoIssueStatus" parameterClass="java.util.Map">
        UPDATE RCV_CO_CERTIFICATE_REQ
           SET REQUEST_STATUS = 'C'
             , CO_DOC_NO = #CO_DOC_NO#
             , UPDATE_DATE = NOW()
             , UPDATE_BY = #USER_ID#
         WHERE COMPANY_CD = #COMPANY_CD#
           AND VENDOR_CD = #VENDOR_CD#
           AND FTA_GROUP_CD = #FTA_GROUP_CD#
           AND EXISTS(SELECT 1
                        FROM RCV_CO_CERTIFICATE_DTL RCCD
                             INNER JOIN RCV_CO_CERTIFICATE_MST RCCM
                                ON RCCM.CO_DOC_NO = RCCD.CO_DOC_NO
                               AND RCCM.COMPANY_CD = RCCD.COMPANY_CD
                               AND RCCM.DIVISION_CD = RCCD.DIVISION_CD
                               AND RCCM.VENDOR_CD = RCCD.VENDOR_CD
                       WHERE RCCD.CO_DOC_NO = #CO_DOC_NO#
                         AND RCCD.COMPANY_CD  = RCV_CO_CERTIFICATE_REQ.COMPANY_CD
                         AND RCCD.VENDOR_CD   = RCV_CO_CERTIFICATE_REQ.VENDOR_CD
                         AND RCCD.ITEM_CD = RCV_CO_CERTIFICATE_REQ.ITEM_CD
                         AND RCCD.FTA_CD = RCV_CO_CERTIFICATE_REQ.FTA_CD
                         AND RCV_CO_CERTIFICATE_REQ.APPLY_DATE BETWEEN RCCM.APPLY_DATE AND RCCM.END_DATE)
    </update>
    
    <!-- 증빙파일 다운로드 -->
    <select id="MMA019.selectProofFile" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT FILE_BIN
              ,ORIGIN_FILE_NAME
              ,FILE_TYPE
              ,FILE_PATH||FILE_NAME AS FILE_PATH
          FROM RCV_CO_CERTIFICATE_FILE
         WHERE COMPANY_CD = #COMPANY_CD#
         <isNotEmpty property="DIVISION_CD">
           AND DIVISION_CD = #DIVISION_CD#
         </isNotEmpty>
           AND VENDOR_CD = #VENDOR_CD#
           AND CO_DOC_NO = #CO_DOC_NO#
         <isNotEmpty property="PRF_FILE_SEQ">
           AND FILE_SEQ = #PRF_FILE_SEQ#::NUMERIC
         </isNotEmpty>
         <isEmpty property="PRF_FILE_SEQ">
           AND EV_DOC_TYPE = '01'
         </isEmpty>
           LIMIT 1 
    </select>
    
    <delete id="MMA019.deleteExcelDOSample" parameterClass="java.util.Map">
        DELETE FROM EXCELDATA
         WHERE COMPANY_CD = #COMPANY_CD#
           AND CATEGORY_CD = 'RCV_DO_DTL'
           AND ID = #VENDOR_CD#||'_'||#USER_ID#
    </delete>
    
    <insert id="MMA019.insertExcelDOSample" parameterClass="java.util.Map">
        INSERT INTO EXCELDATA
              (ID
              ,COMPANY_CD
              ,CATEGORY_CD
              ,CREATE_DATE
              ,SPID
              ,TEXTVALUE1
              ,TEXTVALUE2
              ,TEXTVALUE3
              ,TEXTVALUE4
              ,TEXTVALUE5
              ,TEXTVALUE6
              ,TEXTVALUE7
              ,TEXTVALUE8
              ,TEXTVALUE9
              ,TEXTVALUE10
              ,TEXTVALUE11
              ,TEXTVALUE12
              ,TEXTVALUE13
              ,TEXTVALUE14
              ,TEXTVALUE15
              ,TEXTVALUE16
              ,TEXTVALUE17
              ,TEXTVALUE18
              ,TEXTVALUE19
              ,TEXTVALUE20
              ,TEXTVALUE21)
        VALUES(#VENDOR_CD#||'_'||#USER_ID#
              ,#COMPANY_CD#
              ,'RCV_DO_DTL'
              ,NOW()
              ,#ROW_SEQ#::INT
              ,#VENDOR_CD# 
              ,#ITEM_CD#
              ,#FTA_CD#
              ,#TXN_NO#
              ,#TXN_SEQ#
              ,#FTA_CO_YN#
              ,#FTA_CO_N_REASON#
              ,#HS_CODE#
              ,#SALES_UNIT_PRICE#
              ,#TRACE_VALUE#
              ,#NALADISA_CODE#
              ,#CURRENCY#
              ,#SALES_CURRENCY#
              ,#RULE_CONTENTS#
              ,#RVC_RATE#
              ,#FTA_GROUP_CD#
              ,#ORIGIN_NATION_CD#
              ,#RULE_ID#
              ,#RULE_SEQ#
              ,#NONORIGIN_REASON_CD#
              ,#NONORIGIN_REASON_DESC#)
    </insert>
    
    <!-- 포괄기간 중복건수 체크 -->
    <select id="MMA019.selectCoDateCheck" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
	    SELECT COUNT(*) AS CO_DATE_CNT
	      FROM RCV_CO_CERTIFICATE_MST RCCM
	           INNER JOIN RCV_CO_CERTIFICATE_DTL RCCD
	              ON RCCD.CO_DOC_NO = RCCM.CO_DOC_NO
	             AND RCCD.COMPANY_CD = RCCM.COMPANY_CD
	             AND RCCD.DIVISION_CD = RCCM.DIVISION_CD
	             AND RCCD.VENDOR_CD = RCCM.VENDOR_CD
	           INNER JOIN EXCELDATA E
                  ON E.COMPANY_CD = RCCD.COMPANY_CD
                 AND E.TEXTVALUE1 = RCCD.VENDOR_CD
                 AND E.TEXTVALUE2 = RCCD.ITEM_CD
                 AND E.TEXTVALUE3 = RCCD.FTA_CD
                 AND E.TEXTVALUE16 = RCCM.FTA_GROUP_CD
                 AND E.CATEGORY_CD = 'RCV_DO_DTL'
                 AND E.ID = #VENDOR_CD#||'_'||#USER_ID#
	     WHERE RCCM.COMPANY_CD = #COMPANY_CD#
	       AND RCCM.VENDOR_CD = #VENDOR_CD#
	       AND RCCM.FTA_GROUP_CD = #FTA_GROUP_CD#
	     <isNotEmpty property="CO_DOC_TYPE">
           AND RCCM.CO_DOC_TYPE = #CO_DOC_TYPE#
         </isNotEmpty>
         <isNotEmpty property="INVOICE_NO">
           AND RCCM.INVOICE_NO = #INVOICE_NO#
         </isNotEmpty>
	     <isEqual property="flag" compareValue="update">
           <isEqual property="REGISTED_BY" compareValue="2">
             AND 1 = 2
           </isEqual>
           <isNotEqual property="REGISTED_BY" compareValue="2">
             AND (RCCM.MODIFY_REQUEST_STATUS != 'R' OR RCCM.MODIFY_REQUEST_STATUS IS NULL) 
             AND REGISTED_BY = '1'
           </isNotEqual>
         </isEqual>
           AND RCCM.DIVISION_CD = (SELECT MAX(R.DIVISION_CD)
                                    FROM RCV_CO_CERTIFICATE_MST R
                                   WHERE R.CO_DOC_NO   = RCCM.CO_DOC_NO
                                     AND R.VENDOR_CD   = RCCM.VENDOR_CD
                                     AND R.COMPANY_CD  = RCCM.COMPANY_CD)
	       AND (#APPLY_DATE# BETWEEN RCCM.APPLY_DATE AND RCCM.END_DATE
	            OR #END_DATE# BETWEEN RCCM.APPLY_DATE AND RCCM.END_DATE)
    </select>
    
    <!-- 확인서 증명번호 중복 여부 체크 -->
    <select id="MMA019.selectcInterfaceDupCheck" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT COUNT(*) AS DUPLICATE
          FROM RCV_CO_CERTIFICATE_MST
         WHERE COMPANY_CD = #COMPANY_CD#
           AND VENDOR_CD = #VENDOR_CD#
           AND CO_DOC_NO = #CO_DOC_NO#
    </select>
    
    <!-- 확인서 증명번호 조회 -->
    <select id="MMA019.selectMaxCoDocNo" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT #VENDOR_CD# || '-' || TO_CHAR(NOW(), 'YYYYMMDD') || '-' || 
               LPAD((COALESCE(MAX(SUBSTRING(CO_DOC_NO, LENGTH(CO_DOC_NO)-5))::NUMERIC, 0) + 1)::text, 6, '0') AS CO_DOC_NO
          FROM RCV_CO_CERTIFICATE_MST
         WHERE COMPANY_CD = #COMPANY_CD#
           AND VENDOR_CD = #VENDOR_CD#
           AND SUBSTRING(CO_DOC_NO, LENGTH(CO_DOC_NO) -14, 8) = TO_CHAR(NOW(), 'YYYYMMDD')
    </select>
    
    <!-- 원산지 확인서 정보 등록 및 수정 -->
    <!-- 확인서 기본정보 신규 등록 -->
    <insert id="MMA019.insertBasicInfo" parameterClass="java.util.Map">
        INSERT INTO RCV_CO_CERTIFICATE_MST
             ( CO_DOC_NO
             , VENDOR_CD
             , COMPANY_CD
             , DIVISION_CD
             , CO_DOC_TYPE
             , ISSUE_DATE
             , APPLY_DATE
             , END_DATE
             , VENDOR_CHARGE_NAME
             , VENDOR_CHARGE_POSITION
             , VENDOR_CHARGE_PHONE_NO
             , VENDOR_CHARGE_EMAIL
             , PRODUCER_NAME
             , PRODUCER_PRESIDENT_NAME
             , PRODUCER_BUSINESS_NO
             , PRODUCER_PHONE_NO
             , PRODUCER_FAX_NO
             , PRODUCER_EMAIL
             , PRODUCER_ADDRESS
             , SIGN_CARD
             , REGISTED_BY
             , FTA_GROUP_CD
             , CO_ISSUE_STATUS
             , MODIFY_REQ
             , BF_CO_DOC_NO
             <isNotNull property="INVOICE_NO">, INVOICE_NO</isNotNull>
             , DELETE_YN
             , CREATE_DATE              
             , CREATE_BY                
             , UPDATE_DATE              
             , UPDATE_BY                
             )
        SELECT RCCD.CO_DOC_NO
              ,RCCD.VENDOR_CD
              ,RCCD.COMPANY_CD
              ,RCCD.DIVISION_CD
              ,#CO_DOC_TYPE#
              ,#ISSUE_DATE#
              ,#APPLY_DATE#
              ,#END_DATE#
              ,#VENDOR_CHARGE_NAME#
              ,#VENDOR_CHARGE_POSITION#
              ,#VENDOR_CHARGE_PHONE_NO#
              ,#VENDOR_CHARGE_EMAIL#
              ,#PRODUCER_NAME#
              ,#PRODUCER_PRESIDENT_NAME#
              ,#PRODUCER_BUSINESS_NO#
              ,#PRODUCER_PHONE_NO#
              ,#PRODUCER_FAX_NO#
              ,#PRODUCER_EMAIL#
              ,#PRODUCER_ADDRESS#
              ,V.CHARGE_SIGNATURE
              ,(CASE WHEN #REGISTED_BY# IS NULL OR #REGISTED_BY# = '' THEN '1' ELSE #REGISTED_BY# END)
              ,#FTA_GROUP_CD#
              ,'1'
              ,(CASE WHEN RCCH.SEQ IS NOT NULL THEN RCCH.SEQ ELSE 0 END)
              ,#BF_CO_DOC_NO#
              <isNotNull property="INVOICE_NO">,#INVOICE_NO#</isNotNull>
              ,'N'
              ,NOW()
              ,#USER_ID#
              ,NOW()
              ,#USER_ID#
          FROM (
                SELECT RCCD.CO_DOC_NO
                     , RCCD.VENDOR_CD
                     , RCCD.COMPANY_CD
                     , RCCD.DIVISION_CD
                 FROM RCV_CO_CERTIFICATE_DTL RCCD
                WHERE RCCD.COMPANY_CD = #COMPANY_CD#
                  AND RCCD.VENDOR_CD = #VENDOR_CD#
                  AND RCCD.CO_DOC_NO = #CO_DOC_NO#
                GROUP BY RCCD.CO_DOC_NO
                       , RCCD.VENDOR_CD
                       , RCCD.COMPANY_CD
                       , RCCD.DIVISION_CD
                ) RCCD
                LEFT OUTER JOIN VENDOR V
                  ON V.COMPANY_CD = RCCD.COMPANY_CD
                 AND V.VENDOR_CD = RCCD.VENDOR_CD
                LEFT OUTER JOIN(SELECT MAX(RCCH.SEQ) AS SEQ
                                  FROM RCV_CO_CHANGE_HISTORY RCCH
                                 WHERE RCCH.COMPANY_CD = #COMPANY_CD#
                                   AND RCCH.VENDOR_CD = #VENDOR_CD#
                                   AND RCCH.CO_DOC_NO = #CO_DOC_NO#
                                   AND RCCH.MODIFY_REQUEST_STATUS = 'D') RCCH
                  ON 1 = 1
    </insert>
    
    <delete id="MMA019.deleteRcvMstInfo" parameterClass="java.util.Map">
        DELETE FROM RCV_CO_CERTIFICATE_MST
         WHERE CO_DOC_NO   = #CO_DOC_NO#
           AND VENDOR_CD   = #VENDOR_CD#
           AND COMPANY_CD  = #COMPANY_CD#
    </delete>
    
    <!-- 확인서 기본정보 정정 -->
    <update id="MMA019.updateBasicInfo" parameterClass="java.util.Map">
        UPDATE RCV_CO_CERTIFICATE_MST
           SET VENDOR_CHARGE_NAME      = #VENDOR_CHARGE_NAME#
             , VENDOR_CHARGE_POSITION  = #VENDOR_CHARGE_POSITION#
             , VENDOR_CHARGE_PHONE_NO  = #VENDOR_CHARGE_PHONE_NO#
             , VENDOR_CHARGE_EMAIL     = #VENDOR_CHARGE_EMAIL#
             , PRODUCER_NAME           = #PRODUCER_NAME#
             , PRODUCER_PRESIDENT_NAME = #PRODUCER_PRESIDENT_NAME#
             , PRODUCER_BUSINESS_NO    = #PRODUCER_BUSINESS_NO#
             , PRODUCER_PHONE_NO       = #PRODUCER_PHONE_NO#
             , PRODUCER_FAX_NO         = #PRODUCER_FAX_NO#
             , PRODUCER_EMAIL          = #PRODUCER_EMAIL#
             , PRODUCER_ADDRESS        = #PRODUCER_ADDRESS#
             , SIGN_CARD               = (SELECT CHARGE_SIGNATURE FROM VENDOR WHERE COMPANY_CD = #COMPANY_CD# AND VENDOR_CD = #VENDOR_CD#)
             , FTA_GROUP_CD            = #FTA_GROUP_CD#
             , APPLY_DATE              = #APPLY_DATE#
             , END_DATE                = #END_DATE#
             , MODIFY_REQUEST_STATUS   = 'C'
             , CO_ISSUE_STATUS         = '2'
             , MODIFY_REQ              = (CASE WHEN MODIFY_REQUEST_STATUS = 'R' THEN COALESCE(FN_PG_GET_CAST_NUM(#MODIFY_REQ#), 0) 
                                               ELSE COALESCE((SELECT MAX(H.SEQ)
	                                                       FROM RCV_CO_CHANGE_HISTORY H
	                                                      WHERE H.COMPANY_CD = RCV_CO_CERTIFICATE_MST.COMPANY_CD
	                                                        AND H.DIVISION_CD = RCV_CO_CERTIFICATE_MST.DIVISION_CD
	                                                        AND H.VENDOR_CD = RCV_CO_CERTIFICATE_MST.VENDOR_CD
	                                                        AND H.CO_DOC_NO = RCV_CO_CERTIFICATE_MST.CO_DOC_NO), 0)
                                          END)
             , UPDATE_DATE             = NOW()
             , UPDATE_BY               = #USER_ID#
         WHERE CO_DOC_NO   = #CO_DOC_NO#
           AND VENDOR_CD   = #VENDOR_CD#
           AND COMPANY_CD  = #COMPANY_CD#
    </update>
    
    <!-- 자재별 원산지 정보를 재 등록하기 위해 모든 내역을 삭제함 -->
    <delete id="MMA019.deleteItemListAll" parameterClass="java.util.Map">
        DELETE FROM RCV_CO_CERTIFICATE_DTL
         WHERE CO_DOC_NO   = #CO_DOC_NO#
           AND VENDOR_CD   = #VENDOR_CD#
           AND COMPANY_CD  = #COMPANY_CD#
    </delete>
    
    <!-- 자재목록 원산지 정보 등록 -->
    <insert id="MMA019.insertItemList" parameterClass="java.util.Map" >
        INSERT INTO RCV_CO_CERTIFICATE_DTL
             ( CO_DOC_NO
             , COMPANY_CD
             , DIVISION_CD
             , VENDOR_CD
             , ITEM_CD
             , FTA_CD
             , TXN_NO
             , TXN_SEQ
             , FTA_CO_YN
             , FTA_CO_N_REASON
             , HS_CODE
             , SALES_UNIT_PRICE
             , TRACE_VALUE
             , NALADISA_CODE
             , CURRENCY
             , SALES_CURRENCY
             , RULE_CONTENTS
             , RVC_RATE
             , FTA_GROUP_CD
             , ORIGIN_NATION_CD
             , RULE_ID
             , RULE_SEQ
             , NONORIGIN_REASON_CD
             , NONORIGIN_REASON_DESC
             , CREATE_DATE
             , CREATE_BY
             , UPDATE_DATE
             , UPDATE_BY
             )
        SELECT #CO_DOC_NO#
             ,VI.COMPANY_CD
             ,VI.DIVISION_CD
             ,VI.VENDOR_CD
             ,VI.ITEM_CD
             ,E.TEXTVALUE3 AS FTA_CD
             ,E.TEXTVALUE4 AS TXN_NO
             ,FN_PG_GET_CAST_NUM(E.TEXTVALUE5) AS TXN_SEQ
             ,E.TEXTVALUE6 AS FTA_CO_YN
             ,E.TEXTVALUE7 AS FTA_CO_N_REASON
             ,E.TEXTVALUE8 AS HS_CODE
             ,FN_PG_GET_CAST_NUM(E.TEXTVALUE9) AS SALES_UNIT_PRICE
             ,FN_PG_GET_CAST_NUM(E.TEXTVALUE10) AS TRACE_VALUE
             ,E.TEXTVALUE11 AS NALADISA_CODE
             ,E.TEXTVALUE12 AS CURRENCY
             ,E.TEXTVALUE13 AS SALES_CURRENCY
             ,E.TEXTVALUE14 AS RULE_CONTENTS
             ,FN_PG_GET_CAST_NUM(E.TEXTVALUE15) AS RVC_RATE
             ,E.TEXTVALUE16 AS FTA_GROUP_CD
             ,E.TEXTVALUE17 AS ORIGIN_NATION_CD
             ,FN_PG_GET_CAST_NUM(E.TEXTVALUE18) AS RULE_ID
             ,E.TEXTVALUE19 AS RULE_SEQ
             ,E.TEXTVALUE20 AS NONORIGIN_REASON_CD
             ,E.TEXTVALUE21 AS NONORIGIN_REASON_DESC
             ,NOW()
             ,E.ID AS USER_ID
             ,NOW()
             ,E.ID AS USER_ID
         FROM EXCELDATA E
              INNER JOIN VENDOR_ITEM VI
                 ON E.COMPANY_CD = VI.COMPANY_CD
                AND E.TEXTVALUE1 = VI.VENDOR_CD
                AND E.TEXTVALUE2 = VI.ITEM_CD
                AND E.TEXTVALUE16 = VI.FTA_GROUP_CD
        WHERE E.COMPANY_CD = #COMPANY_CD#
          AND E.ID = #VENDOR_CD#||'_'||#USER_ID#
          AND E.CATEGORY_CD = 'RCV_DO_DTL'
        <isNotNull property="INVOICE_NO"><isNotEmpty property="INVOICE_NO">
          AND EXISTS(SELECT 1 
                       FROM PROCUREMENT P
                      WHERE P.COMPANY_CD = VI.COMPANY_CD
                        AND P.DIVISION_CD = VI.DIVISION_CD
                        AND P.VENDOR_CD = VI.VENDOR_CD
                        AND P.ITEM_CD = VI.ITEM_CD
                        AND P.INVOICE_NO = #INVOICE_NO#)
        </isNotEmpty></isNotNull>
    </insert>
    
    <!-- 증빙파일 수정 시 삭제 후 재 등록됨 -->
    <delete id="MMA019.deleteProofFileInfo" parameterClass="java.util.Map">
        DELETE FROM RCV_CO_CERTIFICATE_FILE
         WHERE COMPANY_CD  = #COMPANY_CD#
           AND VENDOR_CD   = #VENDOR_CD#
           AND CO_DOC_NO   = #CO_DOC_NO#
           AND EV_DOC_TYPE = #EV_DOC_TYPE#
         <isNotEmpty property="FILE_SEQ">
           AND FILE_SEQ = #FILE_SEQ#::NUMERIC
         </isNotEmpty>
    </delete>
    
    <!-- 원산지 확인서 증빙파일 등록 -->
    <insert id="MMA019.insertProofFileInfoCaseInsert" parameterClass="java.util.Map">
        INSERT INTO RCV_CO_CERTIFICATE_FILE
             ( CO_DOC_NO
             , COMPANY_CD
             , VENDOR_CD
             , DIVISION_CD
             , FILE_SEQ
             , FILE_TYPE
             , FILE_PATH
             , FILE_NAME
             , ORIGIN_FILE_NAME
             , ITEM_CD
             , EV_DOC_TYPE
             , FILE_DESC
             , CREATE_DATE
             , CREATE_BY
             , UPDATE_DATE
             , UPDATE_BY
             )
        SELECT RCCM.CO_DOC_NO
             , RCCM.COMPANY_CD
             , RCCM.VENDOR_CD
             , RCCM.DIVISION_CD
             , RCCM.FILE_SEQ
             , #PRF_FILE_TYPE#
             , #FILE_PATH#
             , #PRF_FILE_NAME#
             , #PRF_FILE_ORG_NAME#
             , #ITEM_CD#
             , #EV_DOC_TYPE#
             , #FILE_DESC#
             , NOW()
             , #USER_ID#
             , NOW()
             , #USER_ID#
          FROM (
              SELECT RCCD.CO_DOC_NO,
                     RCCD.COMPANY_CD,
                     RCCD.VENDOR_CD,
                     RCCD.DIVISION_CD,
                     (CASE WHEN COUNT(RCCF.FILE_SEQ) = 0 THEN 1 ELSE MAX(RCCF.FILE_SEQ) + 1 END) AS FILE_SEQ
                FROM RCV_CO_CERTIFICATE_MST RCCD
                     LEFT OUTER JOIN RCV_CO_CERTIFICATE_FILE RCCF
                       ON RCCF.COMPANY_CD = RCCD.COMPANY_CD
                      AND RCCF.DIVISION_CD = RCCD.DIVISION_CD
                      AND RCCF.VENDOR_CD = RCCD.VENDOR_CD
                      AND RCCF.CO_DOC_NO = RCCD.CO_DOC_NO
               WHERE RCCD.COMPANY_CD = #COMPANY_CD#
                 AND RCCD.VENDOR_CD = #VENDOR_CD#
                 AND RCCD.CO_DOC_NO = #CO_DOC_NO#
               GROUP BY RCCD.CO_DOC_NO,
                        RCCD.COMPANY_CD,
                        RCCD.VENDOR_CD,
                        RCCD.DIVISION_CD
               ) RCCM
    </insert>
    
    <insert id="MMA019.updateProofFileInfo" parameterClass="java.util.Map">
        UPDATE RCV_CO_CERTIFICATE_FILE
           SET FILE_BIN = #PRF_FILE_DATA#
         WHERE CO_DOC_NO = #CO_DOC_NO#
           AND VENDOR_CD = #VENDOR_CD#
           AND COMPANY_CD = #COMPANY_CD#
           AND EV_DOC_TYPE = #EV_DOC_TYPE#
         <isNotEmpty property="FILE_SEQ">
           AND FILE_SEQ = #FILE_SEQ#::NUMERIC
         </isNotEmpty>
    </insert>
    
    <select id="MMA019.selectCoDivisionCd" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap" >
        SELECT DISTINCT RCCF.DIVISION_CD
		      ,(CASE WHEN RCCF.FILE_SEQ = 0 THEN 1 ELSE RCCF.FILE_SEQ + 1 END) AS FILE_SEQ
		  FROM (
		        SELECT RCCD.DIVISION_CD
		              ,MAX(RCCF.FILE_SEQ) OVER(PARTITION BY RCCD.COMPANY_CD, RCCD.VENDOR_CD, RCCD.CO_DOC_NO) AS FILE_SEQ
		          FROM RCV_CO_CERTIFICATE_DTL RCCD
		               LEFT OUTER JOIN RCV_CO_CERTIFICATE_FILE RCCF
		                 ON RCCF.COMPANY_CD = RCCD.COMPANY_CD
		                AND RCCF.DIVISION_CD = RCCD.DIVISION_CD
		                AND RCCF.VENDOR_CD = RCCD.VENDOR_CD
		                AND RCCF.CO_DOC_NO = RCCD.CO_DOC_NO
		         WHERE RCCD.COMPANY_CD = #COMPANY_CD#
		           AND RCCD.VENDOR_CD = #VENDOR_CD#
		           AND RCCD.CO_DOC_NO = #CO_DOC_NO#
		        ) RCCF
    </select>
    
    <insert id="MMA019.insertEvCoFiles" parameterClass="java.util.Map">
        INSERT INTO RCV_CO_CERTIFICATE_FILE
             ( CO_DOC_NO
             , COMPANY_CD
             , VENDOR_CD
             , DIVISION_CD
             , FILE_SEQ
             , FILE_TYPE
             , FILE_PATH
             , FILE_NAME
             , ORIGIN_FILE_NAME
             , FILE_BIN
             , ITEM_CD
             , EV_DOC_TYPE
             , FILE_DESC
             , CREATE_DATE
             , CREATE_BY
             , UPDATE_DATE
             , UPDATE_BY
             )
        VALUES(#CO_DOC_NO#
             , #COMPANY_CD#
             , #VENDOR_CD#
             , #DIVISION_CD#
             , #FILE_SEQ#::NUMERIC
             , #PRF_FILE_TYPE#
             , #FILE_PATH#
             , #PRF_FILE_NAME#
             , #PRF_FILE_ORG_NAME#
             , #PRF_FILE_DATA:BLOB#
             , #ITEM_CD#
             , #EV_DOC_TYPE#
             , #FILE_DESC#
             , NOW()
             , #USER_ID#
             , NOW()
             , #USER_ID#)
    </insert>
    
    <!-- 원산지 확인서 제출상태 수정 -->
    <update id="MMA019.updateDocSubmit" parameterClass="java.util.Map">
        UPDATE RCV_CO_CERTIFICATE_MST
           SET CO_ISSUE_STATUS = '2'
             , UPDATE_DATE = NOW()
             , UPDATE_BY = #USER_ID#
         WHERE CO_DOC_NO = #CO_DOC_NO#
           AND VENDOR_CD = #VENDOR_CD#
           AND COMPANY_CD = #COMPANY_CD#
    </update>
    
    <!-- 원산지 수정을 위해 기존 포괄만료기간을 업데이트함  -->
    <update id="MMA019.updateModifyEndDate" parameterClass="java.util.Map">
        UPDATE RCV_CO_CERTIFICATE_MST
           SET END_DATE = #END_DATE#
             , UPDATE_DATE = NOW()
             , UPDATE_BY = #USER_ID#
         WHERE CO_DOC_NO = #CO_DOC_NO#
           AND VENDOR_CD = #VENDOR_CD#
           AND COMPANY_CD = #COMPANY_CD#
    </update>
    
    <!-- 협력사 자재의 원산지 확인서 등록 상태 변경 -->
    <update id="MMA019.updateVendorItemStatus" parameterClass="java.util.Map">
        UPDATE VENDOR_ITEM
           SET STATUS = 'U'
             , LAST_CO_DOC_NO = #CO_DOC_NO#
             , UPDATE_DATE = NOW()
             , UPDATE_BY = #USER_ID#
         WHERE COMPANY_CD = #COMPANY_CD#
           AND VENDOR_CD = #VENDOR_CD#
           AND FTA_GROUP_CD = #FTA_GROUP_CD#
           AND EXISTS(SELECT 1
                        FROM RCV_CO_CERTIFICATE_DTL RCCD
                       WHERE RCCD.CO_DOC_NO = #CO_DOC_NO#
                         AND RCCD.COMPANY_CD  = VENDOR_ITEM.COMPANY_CD
                         AND RCCD.DIVISION_CD = VENDOR_ITEM.DIVISION_CD
                         AND RCCD.VENDOR_CD   = VENDOR_ITEM.VENDOR_CD
                         AND RCCD.ITEM_CD = VENDOR_ITEM.ITEM_CD
                         AND RCCD.FTA_GROUP_CD = VENDOR_ITEM.FTA_GROUP_CD)
    </update>
    
    <!-- 원산지 확인서 요청 처리상태 수정 -->
    <update id="MMA019.updateVendorCoMgmt" parameterClass="java.util.Map">
        UPDATE VENDOR_CO_MGMT
           SET STATUS = '3'
             , CO_DOC_NO = #CO_DOC_NO#
             , REGISTE_DATE = NOW()
             , UPDATE_DATE = NOW()
             , UPDATE_BY = #USER_ID#
         WHERE COMPANY_CD = #COMPANY_CD#
           AND VENDOR_CD = #VENDOR_CD#
           AND DECLARE_NO = #INVOICE_NO#
           AND ITEM_CD = #ITEM_CD#
           AND FTA_CD = #FTA_CD#
           AND FTA_GROUP_CD = #FTA_GROUP_CD#
    </update>
    
    <!-- 수정요청 제출 시 확인서와 싱크를 맞춤 -->
    <update id="MMA019.updateVendorItemResync" parameterClass="java.util.Map">
        UPDATE VENDOR_ITEM
           SET STATUS = (SELECT (CASE WHEN MAX(RCCD.CO_DOC_NO) IS NULL THEN 'N' ELSE 'U' END)
                           FROM RCV_CO_CERTIFICATE_DTL RCCD
                          WHERE RCCD.COMPANY_CD  = VENDOR_ITEM.COMPANY_CD
                            AND RCCD.DIVISION_CD = VENDOR_ITEM.DIVISION_CD
                            AND RCCD.VENDOR_CD   = VENDOR_ITEM.VENDOR_CD
                            AND RCCD.ITEM_CD = VENDOR_ITEM.ITEM_CD
                            AND RCCD.FTA_GROUP_CD = VENDOR_ITEM.FTA_GROUP_CD)
             , LAST_CO_DOC_NO = (SELECT MAX(RCCD.CO_DOC_NO)
                                   FROM RCV_CO_CERTIFICATE_DTL RCCD
                                  WHERE RCCD.COMPANY_CD  = VENDOR_ITEM.COMPANY_CD
                                    AND RCCD.DIVISION_CD = VENDOR_ITEM.DIVISION_CD
                                    AND RCCD.VENDOR_CD   = VENDOR_ITEM.VENDOR_CD
                                    AND RCCD.ITEM_CD = VENDOR_ITEM.ITEM_CD
                                    AND RCCD.FTA_GROUP_CD = VENDOR_ITEM.FTA_GROUP_CD)
             , UPDATE_DATE = NOW()
             , UPDATE_BY = #USER_ID#
         WHERE COMPANY_CD = #COMPANY_CD#
           AND VENDOR_CD = #VENDOR_CD#
           AND FTA_GROUP_CD = #FTA_GROUP_CD#
           AND LAST_CO_DOC_NO = #CO_DOC_NO#
           AND NOT EXISTS(SELECT 1
                            FROM RCV_CO_CERTIFICATE_DTL RCCD
                           WHERE RCCD.CO_DOC_NO = #CO_DOC_NO#
                             AND RCCD.COMPANY_CD  = VENDOR_ITEM.COMPANY_CD
                             AND RCCD.DIVISION_CD = VENDOR_ITEM.DIVISION_CD
                             AND RCCD.VENDOR_CD   = VENDOR_ITEM.VENDOR_CD
                             AND RCCD.ITEM_CD = VENDOR_ITEM.ITEM_CD
                             AND RCCD.FTA_GROUP_CD = VENDOR_ITEM.FTA_GROUP_CD)
    </update>
    
    <!-- 원산지 확인서 수정 이력 마스터 등록 -->
    <insert id="MMA019.insertItemListHistory" parameterClass="java.util.Map">
        INSERT INTO RCV_CO_CHANGE_HISTORY
             ( COMPANY_CD
             , DIVISION_CD
             , VENDOR_CD
             , CO_DOC_NO
             , SEQ
             , MODIFY_REQUEST_DATE
             , MODIFY_REQUEST_STATUS
             , MODIFY_REQUEST_REASON
             , INVOICE_NO
             , CREATE_DATE
             , CREATE_BY
             , UPDATE_DATE
             , UPDATE_BY)
        SELECT RCCM.COMPANY_CD
             , RCCM.DIVISION_CD
             , RCCM.VENDOR_CD
             , RCCM.CO_DOC_NO
             , COALESCE((SELECT MAX(RCCH.SEQ)
	                  FROM RCV_CO_CHANGE_HISTORY RCCH
	                 WHERE RCCH.COMPANY_CD = RCCM.COMPANY_CD
	                   AND RCCH.DIVISION_CD = RCCM.DIVISION_CD
	                   AND RCCH.VENDOR_CD = RCCM.VENDOR_CD
	                   AND RCCH.CO_DOC_NO = RCCM.CO_DOC_NO), 0) + 1
             , NOW()
             , 'C'
             , ''
             , INVOICE_NO
             , CREATE_DATE
             , CREATE_BY
             , UPDATE_DATE
             , UPDATE_BY
          FROM RCV_CO_CERTIFICATE_MST RCCM
         WHERE RCCM.COMPANY_CD = #COMPANY_CD#
           AND RCCM.VENDOR_CD = #VENDOR_CD#
           AND RCCM.CO_DOC_NO = #CO_DOC_NO#
    </insert>
    
    <!-- 원산지 확인서 수정 이력 상세 등록 -->
    <insert id="MMA019.insertItemListHistoryDetail" parameterClass="java.util.Map">
        INSERT INTO RCV_CO_CHANGE_HISTORY_DTL
             ( CO_DOC_NO        
             , COMPANY_CD       
             , DIVISION_CD      
             , VENDOR_CD        
             , MODIFY_REQ       
             , CO_DOC_TYPE
             , ISSUE_DATE
             , APPLY_DATE
             , END_DATE
             , ITEM_CD          
             , FTA_CD           
             , TXN_NO           
             , TXN_SEQ          
             , FTA_CO_YN        
             , FTA_CO_N_REASON  
             , HS_CODE          
             , SALES_UNIT_PRICE
             , TRACE_VALUE
             , NALADISA_CODE
             , CURRENCY
             , SALES_CURRENCY
             , RULE_CONTENTS    
             , RVC_RATE         
             , FTA_GROUP_CD
             , ORIGIN_NATION_CD
             , RULE_ID
             , RULE_SEQ
             , NONORIGIN_REASON_CD
             , NONORIGIN_REASON_DESC             
             , CREATE_DATE
             , CREATE_BY
             )
        SELECT M.CO_DOC_NO
             , M.COMPANY_CD
             , M.DIVISION_CD
             , M.VENDOR_CD
             , (CASE WHEN M.MODIFY_REQUEST_STATUS = 'R' THEN M.MODIFY_REQ ELSE H.SEQ END)
             , M.CO_DOC_TYPE
             , M.ISSUE_DATE
             , M.APPLY_DATE
             , M.END_DATE
             , D.ITEM_CD
             , D.FTA_CD
             , D.TXN_NO
             , D.TXN_SEQ
             , D.FTA_CO_YN
             , D.FTA_CO_N_REASON
             , D.HS_CODE
             , D.SALES_UNIT_PRICE
             , D.TRACE_VALUE
             , D.NALADISA_CODE
             , D.CURRENCY
             , D.SALES_CURRENCY
             , D.RULE_CONTENTS
             , D.RVC_RATE
             , D.FTA_GROUP_CD
             , D.ORIGIN_NATION_CD
             , D.RULE_ID
             , D.RULE_SEQ
             , D.NONORIGIN_REASON_CD
             , D.NONORIGIN_REASON_DESC             
             , D.CREATE_DATE
             , D.CREATE_BY
          FROM RCV_CO_CERTIFICATE_MST M
               INNER JOIN RCV_CO_CERTIFICATE_DTL D
                  ON D.CO_DOC_NO = M.CO_DOC_NO
                 AND D.COMPANY_CD = M.COMPANY_CD
                 AND D.DIVISION_CD = M.DIVISION_CD
                 AND D.VENDOR_CD = M.VENDOR_CD
                LEFT OUTER JOIN (SELECT DIVISION_CD, COALESCE(MAX(SEQ), 0) AS SEQ
				                   FROM RCV_CO_CHANGE_HISTORY
				                  WHERE COMPANY_CD = #COMPANY_CD#
				                    AND VENDOR_CD = #VENDOR_CD#
				                    AND CO_DOC_NO = #CO_DOC_NO#
				                  GROUP BY DIVISION_CD
				                 ) H
                  ON H.DIVISION_CD = M.DIVISION_CD
         WHERE M.COMPANY_CD = #COMPANY_CD#
           AND M.VENDOR_CD = #VENDOR_CD#
           AND M.CO_DOC_NO = #CO_DOC_NO#
           AND (M.MODIFY_REQUEST_STATUS = 'R' OR REGISTED_BY = '2')
    </insert>
    
    <insert id="MMA019.insertItemListHistoryFile" parameterClass="java.util.Map">
        INSERT INTO RCV_CO_CHANGE_HISTORY_FILE
              (CO_DOC_NO
              ,COMPANY_CD
              ,VENDOR_CD
              ,DIVISION_CD
              ,MODIFY_REQ
              ,FILE_SEQ
              ,FILE_TYPE
              ,FILE_PATH
              ,FILE_NAME
              ,ORIGIN_FILE_NAME
              ,FILE_BIN
              ,ITEM_CD
              ,EV_DOC_TYPE
              ,FILE_DESC
              ,CREATE_DATE
              ,CREATE_BY)
        SELECT M.CO_DOC_NO
              ,M.COMPANY_CD
              ,M.VENDOR_CD
              ,M.DIVISION_CD
              ,(CASE WHEN M.MODIFY_REQUEST_STATUS = 'R' THEN M.MODIFY_REQ ELSE H.SEQ END)
              ,D.FILE_SEQ
              ,D.FILE_TYPE
              ,D.FILE_PATH
              ,D.FILE_NAME
              ,D.ORIGIN_FILE_NAME
              ,D.FILE_BIN
              ,D.ITEM_CD
              ,D.EV_DOC_TYPE
              ,D.FILE_DESC
              ,D.CREATE_DATE
              ,D.CREATE_BY
          FROM RCV_CO_CERTIFICATE_MST M
               INNER JOIN RCV_CO_CERTIFICATE_FILE D
                  ON D.CO_DOC_NO = M.CO_DOC_NO
                 AND D.COMPANY_CD = M.COMPANY_CD
                 AND D.DIVISION_CD = M.DIVISION_CD
                 AND D.VENDOR_CD = M.VENDOR_CD
                LEFT OUTER JOIN (SELECT DIVISION_CD, COALESCE(MAX(SEQ), 0) AS SEQ
                                   FROM RCV_CO_CHANGE_HISTORY
                                  WHERE COMPANY_CD = #COMPANY_CD#
                                    AND VENDOR_CD = #VENDOR_CD#
                                    AND CO_DOC_NO = #CO_DOC_NO#
                                  GROUP BY DIVISION_CD
                                 ) H
                  ON H.DIVISION_CD = M.DIVISION_CD
         WHERE M.COMPANY_CD = #COMPANY_CD#
           AND M.VENDOR_CD = #VENDOR_CD#
           AND M.CO_DOC_NO = #CO_DOC_NO#
           AND (M.MODIFY_REQUEST_STATUS = 'R' OR M.REGISTED_BY = '2')
    </insert>
    
    <!-- 원산지 확인서 수정완료 상태 업데이트 -->
    <update id="MMA019.updateDocRequestStatus" parameterClass="java.util.Map">
        UPDATE RCV_CO_CERTIFICATE_MST
           SET MODIFY_REQUEST_STATUS = 'C'
             , UPDATE_DATE = NOW()
             , UPDATE_BY = #USER_ID#
         WHERE CO_DOC_NO = #CO_DOC_NO#
           AND VENDOR_CD = #VENDOR_CD#
           AND COMPANY_CD = #COMPANY_CD#
    </update>
    
    <!-- 자재 HS Code 조회 -->
    <select id="MMA020.selectHSCode" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT HS_CODE 
          FROM ITEM_HS_PRIOD
         WHERE COMPANY_CD = #COMPANY_CD#
           AND ITEM_CD = #ITEM_CD#
           AND CODE_TYPE = 'HSM'
           AND TO_CHAR(NOW(), 'YYYYMMDD') BETWEEN APPLY_DATE AND END_DATE
           AND DELETE_YN != 'Y'
    </select>

    <!-- 품목 NALADISA 조회 -->
    <select id="MMA020.selectNaladisaCd" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT HS_CODE
          FROM ITEM_HS_PRIOD
         WHERE COMPANY_CD = #COMPANY_CD#
           AND ITEM_CD = #ITEM_CD#
           AND CODE_TYPE = 'NAL'
           AND TO_CHAR(NOW(), 'YYYYMMDD') BETWEEN APPLY_DATE AND END_DATE
           AND DELETE_YN != 'Y'
    </select>
    
    <select id="MMA020.selectRuleContents" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT FP.RULE_CONTENTS
		      ,MAX(COALESCE((CASE WHEN RULE_CONTENTS = 'WO' THEN 'WO' WHEN RVC_RATE > 0 THEN 'RVC' ELSE '' END)||
		       (CASE WHEN POSITION('+' IN FP.RULE_CONTENTS) > 0 THEN ' + ' ELSE '' END)||
               (CASE WHEN POSITION('CC' IN FP.RULE_CONTENTS) > 0 THEN 'CC'
                     WHEN POSITION('CTH' IN FP.RULE_CONTENTS) > 0 THEN 'CTH'
                     WHEN POSITION('CTSH' IN FP.RULE_CONTENTS) > 0 THEN 'CTSH'
                     ELSE ''
                END), 'etc.')) AS RULE_CONTENTS_N
		      ,FP.RVC_RATE
		      ,MAX(FP.RULE_SEQ) AS RULE_SEQ
		  FROM (
		        SELECT DISTINCT RULE_CONTENTS
		              ,(COALESCE(BD_RULE, 0) + COALESCE(BU_RULE, 0) + COALESCE(NC_RULE, 0) + COALESCE(MC_RULE, 0)) AS RVC_RATE
		              ,FP.RULE_SEQ
		            <isNotNull property="FTA_RULE_CODE">
		              ,(CASE WHEN #FTA_RULE_CODE# IS NOT NULL AND #FTA_RULE_CODE# = RULE_CONTENTS THEN 1 ELSE 99 END) AS SORT_NO
		            </isNotNull>
		            <isNull property="FTA_RULE_CODE">
		              ,99 AS SORT_NO
		            </isNull>
		          FROM FTA_MST FM
		               INNER JOIN FTA_PSR FP 
		                  ON FP.FTA_CODE = FM.FTA_CD
		                 AND FP.HS_CODE = SUBSTRING((CASE WHEN FM.FTA_ASSOCIATION_CD = 'MER' THEN #NALADISA_CODE#
		                                              ELSE #HS_CODE# END), 1, LENGTH(FP.HS_CODE))
		         WHERE FM.FTA_CD = #FTA_CODE#
		       ) FP
		 GROUP BY FP.RULE_CONTENTS, FP.RVC_RATE
		 ORDER BY MAX(FP.SORT_NO), MAX(FP.RULE_SEQ)
    </select>
    
    <!-- MMA023 : Excel Sample 데이터 조회 -->
    <select id="MMA023.selectExcelSampleList" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap" >
        <include refid="select-paging-start" />
	        SELECT T.COMPANY_CD AS COMPANY_CD
                  ,T.CATEGORY_CD
                  ,T.ID AS USER_ID
                  ,T.SPID
                  ,MAX(T.COMMENTS) AS ERR_MSG
                  ,MAX(T.TEXTVALUE1) AS STATUS
                  ,MAX(T.TEXTVALUE2) AS ITEM_CD
                  ,MAX(T.TEXTVALUE3) AS ITEM_NAME
                  ,MAX(T.TEXTVALUE4) AS FTA_CD
                  ,MAX(T.TEXTVALUE5) AS FTA_NAME
                  ,MAX(T.TEXTVALUE6) AS FTA_GROUP_NAME
                  ,MAX(CASE WHEN UPPER(T.TEXTVALUE6) = 'NAFTA' THEN 'MN'
                         WHEN UPPER(T.TEXTVALUE6) = 'LATAM' THEN 'ML'
                    END) AS FTA_GROUP_CD
                  ,MAX(T.TEXTVALUE7) AS HS_CODE
                  ,MAX(T.TEXTVALUE8) AS NALADISA_CODE
                  ,MAX(T.TEXTVALUE9) AS RULE_CONTENTS
                  ,MAX(T.TEXTVALUE10) AS FTA_CO_YN_Y
                  ,MAX(T.TEXTVALUE11) AS FTA_CO_YN_N
                  ,MAX(T.TEXTVALUE12) AS ISSUE_DATE
                  ,MAX(T.TEXTVALUE13) AS APPLY_DATE
                  ,MAX(T.TEXTVALUE14) AS END_DATE
                  ,MAX(T.TEXTVALUE15) AS RVC_RATE
                  ,MAX(T.TEXTVALUE16) AS TRACE_VALUE
                  ,MAX(T.TEXTVALUE17) AS CURRENCY
                  ,MAX(T.TEXTVALUE18) AS SALES_UNIT_PRICE
                  ,MAX(T.TEXTVALUE19) AS SALES_CURRENCY
                  ,MAX(T.TEXTVALUE20) AS NONORIGIN_REASON_CD
                  ,MAX(T.TEXTVALUE21) AS NONORIGIN_REASON_DESC                  
                  ,MAX(FP.RULE_ID) AS RULE_ID
                  ,MAX(FP.RULE_SEQ) AS RULE_SEQ
                  ,MAX(CD1.WORD) AS NONORIGIN_REASON_NAME
              FROM EXCELDATA T
                   LEFT OUTER JOIN FTA_PSR FP
                     ON FP.FTA_CODE = T.TEXTVALUE4
                    AND FP.HS_CODE = SUBSTR(T.TEXTVALUE7, 1, LENGTH(FP.HS_CODE))
                    AND FP.RULE_CONTENTS = T.TEXTVALUE9
                   LEFT OUTER JOIN CODE_LANG_DIC CD1
                     ON CD1.COMPANY_CD = T.COMPANY_CD
                    AND CD1.CATEGORY_CD = 'NONORIGIN_REASON' 
                    AND CD1.CODE = T.TEXTVALUE20
                    AND CD1.LANGUAGE_CAT = #SESSION_DEFAULT_LANGUAGE#
           WHERE COMPANY_CD = #COMPANY_CD#
             AND CATEGORY_CD = 'RCV_CO_DTL'
             AND ID = #USER_ID#
           GROUP BY T.COMPANY_CD
                   ,T.CATEGORY_CD
                   ,T.ID
                   ,T.SPID
        <include refid="select-paging-end" />
        ORDER BY SPID
    </select>
    
    <!-- MMA023 : 엑셀 임시테이블 데이터 건수 조회 -->
    <select id="MMA023.selectExcelSampleCnt" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap" >
        SELECT COUNT(*) AS EXCEL_CNT
          FROM EXCELDATA
         WHERE COMPANY_CD = #COMPANY_CD#
           AND CATEGORY_CD = 'RCV_CO_DTL'
           AND ID = #USER_ID#
    </select>
    
    <!-- MMA023 : Excel Sample 데이터 등록 -->
    <insert id="MMA023.saveExcelSample" parameterClass="java.util.Map">
        INSERT INTO EXCELDATA
            (COMPANY_CD
            ,CATEGORY_CD
            ,ID
            ,CREATE_DATE
            ,SPID
            ,TEXTVALUE1
			,TEXTVALUE2
			,TEXTVALUE3
			,TEXTVALUE4
			,TEXTVALUE5
			,TEXTVALUE6
			,TEXTVALUE7
			,TEXTVALUE8
			,TEXTVALUE9
			,TEXTVALUE10
			,TEXTVALUE11
			,TEXTVALUE12
			,TEXTVALUE13
			,TEXTVALUE14
			,TEXTVALUE15
			,TEXTVALUE16
			,TEXTVALUE17
			,TEXTVALUE18
			,TEXTVALUE19
			,TEXTVALUE20
            ,TEXTVALUE21)
        VALUES(#COMPANY_CD#
              ,'RCV_CO_DTL'
              ,#USER_ID#
              ,NOW()
              ,FN_PG_GET_CAST_NUM(#SEQ#)
              ,#STATUS#
              ,#ITEM_CD#
              ,#ITEM_NAME#
              ,#FTA_CD#
              ,#FTA_NAME#
              ,#FTA_GROUP_CD#
              ,#HS_CODE#
              ,#NALADISA_CODE#
              ,#RULE_CONTENTS#
              ,#FTA_CO_YN_Y#
              ,#FTA_CO_YN_N#
              ,#ISSUE_DATE#
              ,#APPLY_DATE#
              ,#END_DATE#
              ,#RVC_RATE#
              ,#TRACE_VALUE#
              ,#CURRENCY#
              ,#SALES_UNIT_PRICE#
              ,#SALES_CURRENCY#
              ,#NONORIGIN_REASON_CD#
              ,#NONORIGIN_REASON_DESC#)
    </insert>
    
    <!-- MMA023 : Excel Sample 데이터 삭제 -->
    <delete id="MMA023.deleteExcelSample" parameterClass="java.util.Map">
        DELETE FROM EXCELDATA
         WHERE COMPANY_CD = #COMPANY_CD#
           AND CATEGORY_CD = 'RCV_CO_DTL'
           AND ID = #USER_ID#
    </delete>
    
    <!-- com.yni.fta.common.postgresql.PostgresqlDao 클래스에서 직접 구현
    <parameterMap id="MMA023ExecuteItemErrorCheckMap" class="java.util.Map">
        <parameter property="COMPANY_CD"   jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="USER_ID"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="FTA_GROUP_CD" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="GLOBAL_CD"    jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="ISSUE_DATE"   jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="APPLY_DATE"   jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="END_DATE"     jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
        <parameter property="O_RETURN"     jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="O_RETURNMSG"  jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
        <parameter property="O_LINES"      jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
    </parameterMap>
    <procedure id="MMA023.executeItemErrorCheck" parameterMap="MMA023ExecuteItemErrorCheckMap">
        { CALL RCV_MX_CO_VALIDATION(?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
    </procedure>
    -->
</sqlMap>