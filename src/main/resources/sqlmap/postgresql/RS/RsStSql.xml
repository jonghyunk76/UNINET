<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="rsrtsql">

    <select id="STR001.selectServerList" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        <include refid="select-paging-start" />
	        SELECT COMPANY_CD
	              ,SERVER_ID
		          ,SERVER_NAME
		          ,SERVER_IP
		          ,SERVER_PORT
		          ,ATTRIBUTE01
		          ,FN_GET_COMMON_CD(COMPANY_CD, 'RS_SERVER_TYPE', ATTRIBUTE01, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS SERVER_TYPE_NAME
		          ,ATTRIBUTE02
		          ,ATTRIBUTE03
		          ,ATTRIBUTE04
		          ,ATTRIBUTE05
		          ,ATTRIBUTE06
		          ,FN_GET_COMMON_CD(COMPANY_CD, 'RS_CNN_PROTOCAL', ATTRIBUTE06, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS SERVER_PROTOCAL_NAME
		          ,ATTRIBUTE07
		          ,ATTRIBUTE08
		          ,ATTRIBUTE09
		          ,ATTRIBUTE10
		          ,USE_YN
		          ,FN_GET_COMMON_CD(COMPANY_CD, 'YN', USE_YN, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS USE_YN_NAME
				  ,CURRENT_STAT
				  ,FN_GET_COMMON_CD(COMPANY_CD, 'RS_CNN_STAT', CURRENT_STAT, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS CURRENT_STAT_NAME
				  ,EXCEPTION_MSG
		          ,SERVER_DESC
		          ,CREATE_DATE
		          ,CREATE_BY
		          ,UPDATE_DATE
		          ,UPDATE_BY 
	        FROM  SERVER_MST
	       WHERE  COMPANY_CD = #COMPANY_CD#
	    <isNotEmpty property="schKeyWord">
	         AND SERVER_NAME LIKE #schKeyWord#
	    </isNotEmpty>
        <include refid="select-paging-end" />
        ORDER BY SERVER_ID
    </select>
    
    <update id="STR001.insertServerMst" parameterClass="java.util.Map">
        INSERT INTO SERVER_MST (
                     COMPANY_CD
                    ,SERVER_ID
                    ,SERVER_NAME
                    ,SERVER_IP
                    ,SERVER_PORT
                    ,ATTRIBUTE01
                    ,ATTRIBUTE02
                    ,ATTRIBUTE03
                    ,ATTRIBUTE04
                    ,ATTRIBUTE05
                    ,ATTRIBUTE06
                    ,ATTRIBUTE07
                    ,ATTRIBUTE08
                    ,ATTRIBUTE09
                    ,ATTRIBUTE10
                    ,USE_YN
                    ,SERVER_DESC
                    ,CREATE_DATE
                    ,CREATE_BY
                    ,UPDATE_DATE
                    ,UPDATE_BY)
          VALUES (
                     #COMPANY_CD#
                    ,#SERVER_ID#
                    ,#SERVER_NAME#
                    ,#SERVER_IP#
                    ,#SERVER_PORT#
                    ,#ATTRIBUTE01#
                    ,#ATTRIBUTE02#
                    ,#ATTRIBUTE03#
                    ,#ATTRIBUTE04#
                    ,#ATTRIBUTE05#
                    ,#ATTRIBUTE06#
                    ,#ATTRIBUTE07#
                    ,#ATTRIBUTE08#
                    ,#ATTRIBUTE09#
                    ,#ATTRIBUTE10#
                    ,#USE_YN#
                    ,#SERVER_DESC#
                    ,now()::timestamp
                    ,#SESSION_USER_ID#
                    ,now()::timestamp
                    ,#SESSION_USER_ID#
          )
    </update>
    
    <update id="STR001.updateServerMst" parameterClass="java.util.Map">
        UPDATE SERVER_MST 
           SET SERVER_NAME = #SERVER_NAME#
              ,SERVER_IP   = #SERVER_IP#
              ,SERVER_PORT = #SERVER_PORT#
              ,ATTRIBUTE01 = #ATTRIBUTE01#
              ,ATTRIBUTE02 = #ATTRIBUTE02#
              ,ATTRIBUTE03 = #ATTRIBUTE03#
              ,ATTRIBUTE04 = #ATTRIBUTE04#
              ,ATTRIBUTE05 = #ATTRIBUTE05#
              ,ATTRIBUTE06 = #ATTRIBUTE06#
              ,ATTRIBUTE07 = #ATTRIBUTE07#
              ,ATTRIBUTE08 = #ATTRIBUTE08#
              ,ATTRIBUTE09 = #ATTRIBUTE09#
              ,ATTRIBUTE10 = #ATTRIBUTE10#
              ,USE_YN      = #USE_YN#
              ,SERVER_DESC = #SERVER_DESC#
              ,UPDATE_DATE = now()::timestamp
              ,UPDATE_BY   = #SESSION_USER_ID#
        WHERE COMPANY_CD = #COMPANY_CD#
          AND SERVER_ID = #SERVER_ID#
    </update>
    
    <delete id="STR001.deleteServerMst" parameterClass="java.util.Map">
        DELETE FROM SERVER_MST
         WHERE COMPANY_CD = #COMPANY_CD#
           AND SERVER_ID = #SERVER_ID#
    </delete>
    
    <select id="STR001.selectConnCountOfChart" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT IHM.COMPANY_CD
		      ,IHM.HOUR_SPLIT
		      ,SUM(CASE WHEN IHM.INTERFACE_MTH = 'S' THEN 1 ELSE 0 END) AS SND_DATA_CNT
		      ,SUM(CASE WHEN IHM.INTERFACE_MTH = 'R' THEN 1 ELSE 0 END) AS REV_DATA_CNT
		      ,COUNT(1) AS DATA_CNT
		  FROM (
		        SELECT IHM.COMPANY_CD
		              ,TO_CHAR(IHM.CREATE_DATE, 'HH24') AS HOUR_SPLIT
		              ,IHM.INTERFACE_HISTORY_ID
		              ,MAX(SH.INTERFACE_MTH) AS INTERFACE_MTH
		          FROM INTERFACE_HISTORY IHM
		               LEFT OUTER JOIN SERVICE_HISTORY SH
		                 ON SH.COMPANY_CD = IHM.COMPANY_CD
		                AND SH.IF_CD = IHM.IF_CD
		                AND SH.SERVICE_HISTORY_ID = IHM.PARENT_HISTORY_ID
		         WHERE IHM.COMPANY_CD = #COMPANY_CD#
		           AND IHM.BATCH_STATUS IN('S', 'N')
		           AND IHM.CREATE_DATE BETWEEN (NOW() + INTERVAL '-24 HOUR') AND NOW()
		         GROUP BY IHM.COMPANY_CD
		                 ,TO_CHAR(IHM.CREATE_DATE, 'HH24')
		                 ,IHM.INTERFACE_HISTORY_ID
		        ) IHM
		 GROUP BY IHM.COMPANY_CD
		         ,IHM.HOUR_SPLIT
    </select>
     
    <select id="STR001.selectConnTrafficOfChart" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
		SELECT IHM.COMPANY_CD
		      ,TO_CHAR(IHM.CREATE_DATE, 'HH24') AS HOUR_SPLIT
		      ,COUNT(1) AS DATA_CNT
		  FROM INTERFACE_HISTORY IHM
		       INNER JOIN INTERFACE_HISTORY_DATA IHD
		          ON IHM.COMPANY_CD = IHD.COMPANY_CD
		         AND IHM.INTERFACE_HISTORY_ID = IHD.INTERFACE_HISTORY_ID
		 WHERE IHM.COMPANY_CD = #COMPANY_CD#
		   AND IHM.BATCH_STATUS = 'S'
		   AND IHM.CREATE_DATE BETWEEN (NOW() + INTERVAL '-24 HOUR') AND NOW()
		 GROUP BY IHM.COMPANY_CD
		         ,TO_CHAR(IHM.CREATE_DATE, 'HH24')
    </select>
    
    <select id="STR002.selectServiceList" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        <include refid="select-paging-start" />
            SELECT SM.COMPANY_CD
                  ,SM.SERVICE_ID
                  ,SM.SERVICE_NAME
                  ,SM.SERVICE_TYPE
                  ,FN_GET_COMMON_CD(SM.COMPANY_CD, 'RS_IF_CNN_TYPE', SM.SERVICE_TYPE, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS SERVICE_TYPE_NAME
                  ,SM.SERVICE_DESC
                  ,SM.USE_YN
                  ,FN_GET_COMMON_CD(SM.COMPANY_CD, 'YN', SM.USE_YN, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS USE_YN_NAME
                  ,SP.PLAN_NO
                  ,SP.IF_CD
                  ,IIM.IF_NAME AS IF_NAME
                  ,SP.INTERFACE_MTH
                  ,FN_GET_COMMON_CD(SP.COMPANY_CD, 'RS_RESEND_MTH', SP.INTERFACE_MTH, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS INTERFACE_MTH_NAME
                  ,SP.SERVER_ID
                  ,SM1.SERVER_NAME AS SERVER_NAME
                  ,SP.PROCESS_TYPE
                  ,FN_GET_COMMON_CD(SP.COMPANY_CD, 'RS_CNN_SERVER_TYPE', SP.PROCESS_TYPE, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS PROCESS_TYPE_NAME
                  ,SP.ATTRIBUTE01
                  ,FN_GET_COMMON_CD(SP.COMPANY_CD, 'RS_DATA_FORMAT', SP.ATTRIBUTE01, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS RES_FORMAT_NAME
                  ,SP.ATTRIBUTE02
                  ,FN_GET_COMMON_CD(SP.COMPANY_CD, 'RS_DATA_FORMAT', SP.ATTRIBUTE02, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS REQ_FORMAT_NAME
                  ,SP.DATA_PATH
                  ,SP.TRAN_ROW_NUM
                  ,SP.PLAN_DESC
              FROM SERVICE_MST SM
                   LEFT OUTER JOIN SERVICE_PLAN SP
                     ON SP.COMPANY_CD = SM.COMPANY_CD
                    AND SP.SERVICE_ID = SM.SERVICE_ID
                   LEFT JOIN SERVER_MST SM1
                     ON SM1.COMPANY_CD = SP.COMPANY_CD
                    AND SM1.SERVER_ID = SP.SERVER_ID
                   LEFT JOIN INTERFACE_ITEM_MST IIM
                     ON IIM.COMPANY_CD = SP.COMPANY_CD
                    AND IIM.IF_CD = SP.IF_CD
	        WHERE SM.COMPANY_CD = #COMPANY_CD#
            <isNotEmpty property="schKeyWord">
              AND SM.SERVICE_NAME LIKE #schKeyWord#
            </isNotEmpty>
        <include refid="select-paging-end" />
        ORDER BY SERVICE_ID, PLAN_NO
    </select>
    
    <update id="STR002.insertServiceMst" parameterClass="java.util.Map">
        INSERT INTO SERVICE_MST (
                     COMPANY_CD
                    ,SERVICE_ID
					,SERVICE_NAME
					,SERVICE_TYPE
					,ATTRIBUTE01
					,ATTRIBUTE02
					,ATTRIBUTE03
					,ATTRIBUTE04
					,ATTRIBUTE05
					,ATTRIBUTE06
					,ATTRIBUTE07
					,ATTRIBUTE08
					,ATTRIBUTE09
					,ATTRIBUTE10
					,SERVICE_DESC
					,USE_YN
					,CREATE_DATE
					,CREATE_BY
					,UPDATE_DATE
					,UPDATE_BY)
          VALUES (
                     #COMPANY_CD#
                    ,#SERVICE_ID#
					,#SERVICE_NAME#
					,#SERVICE_TYPE#
					,#ATTRIBUTE01#
					,#ATTRIBUTE02#
					,#ATTRIBUTE03#
					,#ATTRIBUTE04#
					,#ATTRIBUTE05#
					,#ATTRIBUTE06#
					,#ATTRIBUTE07#
					,#ATTRIBUTE08#
					,#ATTRIBUTE09#
					,#ATTRIBUTE10#
					,#SERVICE_DESC#
					,#USE_YN#
					,now()::timestamp
					,#SESSION_USER_ID#
					,now()::timestamp
					,#SESSION_USER_ID#
				)
    </update>
    
    <update id="STR002.updateServiceMst" parameterClass="java.util.Map">
        UPDATE SERVICE_MST 
           SET
               SERVICE_NAME = #SERVICE_NAME#
              ,SERVICE_TYPE = #SERVICE_TYPE#
              ,ATTRIBUTE01  = #ATTRIBUTE01#
              ,ATTRIBUTE02  = #ATTRIBUTE02#
              ,ATTRIBUTE03  = #ATTRIBUTE03#
              ,ATTRIBUTE04  = #ATTRIBUTE04#
              ,ATTRIBUTE05  = #ATTRIBUTE05#
              ,ATTRIBUTE06  = #ATTRIBUTE06#
              ,ATTRIBUTE07  = #ATTRIBUTE07#
              ,ATTRIBUTE08  = #ATTRIBUTE08#
              ,ATTRIBUTE09  = #ATTRIBUTE09#
              ,ATTRIBUTE10  = #ATTRIBUTE10#
              ,SERVICE_DESC = #SERVICE_DESC#
              ,USE_YN       = #USE_YN#
              ,UPDATE_DATE = now()::timestamp
              ,UPDATE_BY   = #SESSION_USER_ID#
        WHERE SERVICE_ID   = #SERVICE_ID#
    </update>
    
    <delete id="STR002.deleteServiceMst" parameterClass="java.util.Map">
        DELETE FROM SERVICE_MST
         WHERE COMPANY_CD = #COMPANY_CD#
           AND SERVICE_ID = #SERVICE_ID#
    </delete>
    
    <select id="STR002.selectServicePlanList" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        SELECT SP.COMPANY_CD
              ,SP.SERVICE_ID
              ,SP.PLAN_NO
              ,SP.IF_CD
              ,IIM.IF_NAME AS IF_NAME
              ,SP.INTERFACE_MTH
              ,FN_GET_COMMON_CD(SP.COMPANY_CD, 'RS_RESEND_MTH', SP.INTERFACE_MTH, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS INTERFACE_MTH_NAME
              ,SP.SERVER_ID
              ,SM1.SERVER_NAME AS SERVER_NAME
              ,SP.PROCESS_TYPE
              ,FN_GET_COMMON_CD(SP.COMPANY_CD, 'RS_CNN_SERVER_TYPE', SP.PROCESS_TYPE, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS PROCESS_TYPE_NAME
              ,SP.ATTRIBUTE01
              ,FN_GET_COMMON_CD(SP.COMPANY_CD, 'RS_DATA_FORMAT', SP.ATTRIBUTE01, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS RES_FORMAT_NAME
              ,SP.ATTRIBUTE02
              ,FN_GET_COMMON_CD(SP.COMPANY_CD, 'RS_DATA_FORMAT', SP.ATTRIBUTE02, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS REQ_FORMAT_NAME
              ,SP.DATA_PATH
              ,SP.TRAN_ROW_NUM
              ,SP.PLAN_DESC
              ,SP.ATTRIBUTE01
              ,SP.ATTRIBUTE02
              ,SP.ATTRIBUTE03
              ,SP.ATTRIBUTE04
              ,SP.ATTRIBUTE05
              ,SP.ATTRIBUTE06
              ,SP.ATTRIBUTE07
              ,SP.ATTRIBUTE08
              ,SP.ATTRIBUTE09
              ,SP.ATTRIBUTE10
              ,SP.PLAN_DESC
          FROM SERVICE_PLAN SP
               LEFT JOIN SERVER_MST SM1
                 ON SM1.COMPANY_CD = SP.COMPANY_CD
                AND SM1.SERVER_ID = SP.SERVER_ID
               LEFT JOIN INTERFACE_ITEM_MST IIM
                 ON IIM.COMPANY_CD = SP.COMPANY_CD
                AND IIM.IF_CD = SP.IF_CD
        WHERE SP.COMPANY_CD = #COMPANY_CD#
          AND SP.SERVICE_ID = #SERVICE_ID#
        ORDER BY PLAN_NO
    </select>
    
    <update id="STR002.insertServicePlan" parameterClass="java.util.Map">
        INSERT INTO SERVICE_PLAN (
                  COMPANY_CD
                 ,SERVICE_ID
                 ,PLAN_NO
                 ,IF_CD
                 ,INTERFACE_MTH
                 ,SERVER_ID
				 ,PROCESS_TYPE
				 ,DATA_PATH
				 ,TRAN_ROW_NUM
                 ,ATTRIBUTE01
                 ,ATTRIBUTE02
                 ,ATTRIBUTE03
                 ,ATTRIBUTE04
                 ,ATTRIBUTE05
                 ,ATTRIBUTE06
                 ,ATTRIBUTE07
                 ,ATTRIBUTE08
                 ,ATTRIBUTE09
                 ,ATTRIBUTE10
                 ,PLAN_DESC
                 ,CREATE_DATE
                 ,CREATE_BY
                 ,UPDATE_DATE
                 ,UPDATE_BY)
          VALUES (#COMPANY_CD#
                 ,#SERVICE_ID#
                 ,fn_pg_get_cast_num(#PLAN_NO#)
                 ,#IF_CD#
                 ,#INTERFACE_MTH#
                 ,#SERVER_ID#
                 ,#PROCESS_TYPE#
                 ,#DATA_PATH#
                 ,fn_pg_get_cast_num(#TRAN_ROW_NUM#)
                 ,#ATTRIBUTE01#
                 ,#ATTRIBUTE02#
                 ,#ATTRIBUTE03#
                 ,#ATTRIBUTE04#
                 ,#ATTRIBUTE05#
                 ,#ATTRIBUTE06#
                 ,#ATTRIBUTE07#
                 ,#ATTRIBUTE08#
                 ,#ATTRIBUTE09#
                 ,#ATTRIBUTE10#
                 ,#PLAN_DESC#
                 ,now()::timestamp
                 ,#USER_ID#
                 ,now()::timestamp
                 ,#USER_ID#)
    </update>
    
    <delete id="STR002.deleteServicePlan" parameterClass="java.util.Map">
        DELETE FROM SERVICE_PLAN
         WHERE COMPANY_CD = #COMPANY_CD#
           AND SERVICE_ID = #SERVICE_ID#
    </delete>
    
    <select id="STR002.selectServiceMstList" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        <include refid="select-paging-start" />
            SELECT SM.COMPANY_CD
                  ,SM.SERVICE_ID
                  ,SM.SERVICE_NAME
                  ,SM.SERVICE_TYPE
                  ,FN_GET_COMMON_CD(SM.COMPANY_CD, 'RS_IF_CNN_TYPE', SM.SERVICE_TYPE, 'NAME', #SESSION_DEFAULT_LANGUAGE#) AS SERVICE_TYPE_NAME
              FROM SERVICE_MST SM
            WHERE SM.COMPANY_CD = #COMPANY_CD#
        <include refid="select-paging-end" />
        ORDER BY SERVICE_ID
    </select>
    
    <select id="STR003.selectServiceHistoryList" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        <include refid="select-paging-start" />
            SELECT SH.COMPANY_CD
			      ,SH.SERVICE_HISTORY_ID
			      ,SH.SERVICE_ID
			      ,SH.SERVICE_NAME
			      ,SH.TRANS_STATUS
			      ,CLD.WORD AS TRANS_STATUS_NAME
			      ,SH.REQUEST_PARAM
			      ,TO_CHAR(SH.CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS.MS') AS SERVICE_START_DATE
			      ,TO_CHAR(SH.UPDATE_DATE, 'YYYY-MM-DD HH24:MI:SS.MS') AS SERVICE_END_DATE
			      ,TRUNC(EXTRACT(EPOCH FROM (SH.UPDATE_DATE-SH.CREATE_DATE)::INTERVAL), 3) AS RUNNING_MSEC
			      ,SH.TRANS_COUNT
			      ,SH.SCHEDULE_CD
			      ,COALESCE(ISH.SCHEDULE_NAME, SH.SCHEDULE_CD) AS BATCH_NAME
			  FROM (
			        SELECT SH.COMPANY_CD
			              ,SH.SERVICE_HISTORY_ID
			              ,SH.SERVICE_ID
			              ,SM.SERVICE_NAME
			              ,MAX(SH.TRANS_STATUS) AS TRANS_STATUS
			              ,MAX(CASE WHEN SH.PLAN_NO = 1 THEN SH.REQUEST_PARAM ELSE NULL END) AS REQUEST_PARAM
			              ,MIN(SH.CREATE_DATE) AS CREATE_DATE
			              ,MAX(SH.UPDATE_DATE) AS UPDATE_DATE
			              ,COUNT(1) AS TRANS_COUNT
			              ,MAX(SH.SCHEDULE_CD) AS SCHEDULE_CD
			          FROM SERVICE_HISTORY SH
			               LEFT OUTER JOIN SERVICE_MST SM
			                 ON SM.COMPANY_CD = SH.COMPANY_CD
			                AND SM.SERVICE_ID = SH.SERVICE_ID
			               LEFT OUTER JOIN SERVICE_PLAN SP
			                 ON SP.COMPANY_CD = SM.COMPANY_CD
			                AND SP.SERVICE_ID = SM.SERVICE_ID
			                AND SP.PLAN_NO = SH.PLAN_NO
			               LEFT OUTER JOIN INTERFACE_HISTORY IH
			                 ON SH.COMPANY_CD = IH.COMPANY_CD
			                AND SH.INTERFACE_HISTORY_ID = IH.INTERFACE_HISTORY_ID
			         WHERE SH.COMPANY_CD = #COMPANY_CD#
			           AND TO_CHAR(SH.CREATE_DATE, 'YYYYMMDD') BETWEEN #SEH_FORM_DATE# AND #SEH_TO_DATE#
			         GROUP BY SH.COMPANY_CD
			                 ,SH.SERVICE_HISTORY_ID
			                 ,SH.SERVICE_ID
			                 ,SM.SERVICE_NAME
			        ) SH
			        LEFT OUTER JOIN CODE_LANG_DIC CLD
			         ON CLD.COMPANY_CD = SH.COMPANY_CD
			        AND CLD.CATEGORY_CD = 'RS_TRANS_STATUS'
			        AND CLD.CODE = SH.TRANS_STATUS
			        AND CLD.LANGUAGE_CAT = #SESSION_DEFAULT_LANGUAGE#
			       LEFT OUTER JOIN INTERFACE_SCHEDULE ISH
			         ON ISH.COMPANY_CD = SH.COMPANY_CD
			        AND ISH.SCHEDULE_CD = SH.SCHEDULE_CD
		 <isNotEmpty property="TRANS_STATUS">
			WHERE SH.TRANS_STATUS = #TRANS_STATUS#
	     </isNotEmpty>
        <include refid="select-paging-end" />
        ORDER BY SERVICE_HISTORY_ID DESC
    </select>
    
    <select id="STR003.selectInterfaeHistoryList" parameterClass="java.util.Map" resultClass="java.util.LinkedHashMap">
        <include refid="select-paging-start" />
            SELECT IH.COMPANY_CD
                  ,IH.PARENT_HISTORY_ID AS SERVICE_HISTORY_ID
                  ,IH.INTERFACE_HISTORY_ID
                  ,SP.PLAN_NO
                  ,SP.INTERFACE_MTH
                  ,CD2.WORD AS INTERFACE_MTH_NAME
                  ,ST.SERVER_ID
                  ,ST.SERVER_NAME
                  ,SP.DATA_PATH
                  ,IH.DIVISION_CD
                  ,IH.SCHEDULE_CD
                  ,IH.IF_CD
                  ,IIM.IF_NAME 
                  ,IH.TOTAL_ROWS
                  ,IH.FROM_DATE
                  ,SUBSTRING(IH.FROM_DATE, 1, 6) AS YYYYMM
                  ,IH.TO_DATE
                  ,IH.IF_PARAM
                  ,IH.ERROR_YN
                  ,COALESCE(MT.MESSAGE, IH.ERROR_MESSAGE) AS RESULT_MESSAGE
                  ,IH.SUBMIT_STATUS
                  ,IH.BATCH_STATUS
                  ,CD1.WORD AS BATCH_STATUS_NAME
                  ,IH.TRANS_STATUS
                  ,IH.REQUEST_PARAM
                  ,TO_CHAR(IH.CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS.MS') AS IF_START_DATE
                  ,TO_CHAR(IH.UPDATE_DATE, 'YYYY-MM-DD HH24:MI:SS.MS') AS IF_END_DATE
                  ,TRUNC(EXTRACT(EPOCH FROM (IH.UPDATE_DATE-IH.CREATE_DATE)::INTERVAL), 3) AS IF_RUNNING_MSEC
                  ,COALESCE(IH.PARENT_HISTORY_ID, IH.INTERFACE_HISTORY_ID) AS PARENT_HISTORY_ID
              FROM INTERFACE_HISTORY IH
                   LEFT OUTER JOIN (SELECT DISTINCT SH.COMPANY_CD
                                          ,SH.SERVICE_HISTORY_ID
                                          ,SH.SERVICE_ID
                                          ,SH.PLAN_NO
                                          ,SH.IF_CD
                                      FROM SERVICE_HISTORY SH
                                     WHERE SH.COMPANY_CD = #COMPANY_CD#
                                       AND SH.SERVICE_HISTORY_ID = #SERVICE_HISTORY_ID#::numeric
                                    ) SH
                     ON SH.COMPANY_CD = IH.COMPANY_CD
                    AND SH.SERVICE_HISTORY_ID = IH.PARENT_HISTORY_ID
                    AND SH.IF_CD = IH.IF_CD
                   LEFT OUTER JOIN SERVICE_PLAN SP
                     ON SP.COMPANY_CD = SH.COMPANY_CD
                    AND SP.SERVICE_ID = SH.SERVICE_ID
                    AND SP.PLAN_NO = SH.PLAN_NO
                   LEFT OUTER JOIN SERVER_MST ST
                     ON ST.COMPANY_CD = SP.COMPANY_CD
                    AND ST.SERVER_ID = SP.SERVER_ID
                   LEFT OUTER JOIN INTERFACE_ITEM_MST IIM
                     ON IIM.COMPANY_CD = IH.COMPANY_CD
                    AND IIM.IF_CD = IH.IF_CD
                   LEFT OUTER JOIN MESSAGE_TABLE MT
                     ON MT.MESSAGE_CODE IN('TXT_'||IH.ERROR_MESSAGE, 'MSG_'||IH.ERROR_MESSAGE)
                    AND MT.NATION_CODE = #SESSION_DEFAULT_LANGUAGE#
                   LEFT OUTER JOIN CODE_LANG_DIC CD1
                     ON CD1.COMPANY_CD = IH.COMPANY_CD
                    AND CD1.CATEGORY_CD = 'BATCH_STATUS'
                    AND CD1.CODE = IH.BATCH_STATUS
                    AND CD1.LANGUAGE_CAT = #SESSION_DEFAULT_LANGUAGE#
                   LEFT OUTER JOIN CODE_LANG_DIC CD2
                     ON CD2.COMPANY_CD = SP.COMPANY_CD
                    AND CD2.CATEGORY_CD = 'RS_RESEND_MTH'
                    AND CD2.CODE = SP.INTERFACE_MTH
                    AND CD2.LANGUAGE_CAT = #SESSION_DEFAULT_LANGUAGE#
             WHERE IH.COMPANY_CD = #COMPANY_CD#
               AND IH.PARENT_HISTORY_ID = #SERVICE_HISTORY_ID#::numeric
        <include refid="select-paging-end" />
        ORDER BY IF_PARAM DESC, INTERFACE_HISTORY_ID
    </select>
    
</sqlMap>